
=== Sheet Bindings =====================================

 -- Row 1 -----------------------------------
  Binding Name = XPathUsageType
  Binding = code list
  Reference = #search-xpath-usage
  Definition = How a search parameter relates to the set of elements returned by evaluating its xpath query.
  Conformance = required

 -- Row 2 -----------------------------------
  Binding Name = SearchComparator
  Binding = code list
  Reference = #search-comparator
  Definition = What Search Comparator Codes are supported in search
  Conformance = required

 -- Row 3 -----------------------------------
  Binding Name = SearchModifierCode
  Binding = code list
  Reference = #search-modifier-code
  Definition = A supported modifier for a search parameter.

=== Sheet search-xpath-usage =====================================

 -- Row 1 -----------------------------------
  Id = 1
  Code = normal
  Display = Normal
  Definition = The search parameter is derived directly from the selected nodes based on the type definitions.

 -- Row 2 -----------------------------------
  Id = 2
  Code = phonetic
  Display = Phonetic
  Definition = The search parameter is derived by a phonetic transform from the selected nodes.

 -- Row 3 -----------------------------------
  Id = 3
  Code = nearby
  Display = Nearby
  Definition = The search parameter is based on a spatial transform of the selected nodes.

 -- Row 4 -----------------------------------
  Id = 4
  Code = distance
  Display = Distance
  Definition = The search parameter is based on a spatial transform of the selected nodes, using physical distance from the middle.

 -- Row 5 -----------------------------------
  Id = 5
  Code = other
  Display = Other
  Definition = The interpretation of the xpath statement is unknown (and can\'t be automated).

=== Sheet search-comparator =====================================

 -- Row 1 -----------------------------------
  Id = 1
  Code = eq
  Display = Equals
  Definition = the value for the parameter in the resource is equal to the provided value

 -- Row 2 -----------------------------------
  Id = 2
  Code = ne
  Display = Not Equals
  Definition = the value for the parameter in the resource is not equal to the provided value

 -- Row 3 -----------------------------------
  Id = 3
  Code = gt
  Display = Greater Than
  Definition = the value for the parameter in the resource is greater than the provided value

 -- Row 4 -----------------------------------
  Id = 4
  Code = lt
  Display = Less Then
  Definition = the value for the parameter in the resource is less than the provided value

 -- Row 5 -----------------------------------
  Id = 5
  Code = ge
  Display = Greater or Equals
  Definition = the value for the parameter in the resource is greater or equal to the provided value

 -- Row 6 -----------------------------------
  Id = 6
  Code = le
  Display = Less of Equal
  Definition = the value for the parameter in the resource is less or equal to the provided value

 -- Row 7 -----------------------------------
  Id = 7
  Code = sa
  Display = Starts After
  Definition = the value for the parameter in the resource starts after the provided value

 -- Row 8 -----------------------------------
  Id = 8
  Code = eb
  Display = Ends Before
  Definition = the value for the parameter in the resource ends before the provided value

 -- Row 9 -----------------------------------
  Id = 9
  Code = ap
  Display = Approximately
  Definition = the value for the parameter in the resource is approximately the same to the provided value.

=== Sheet search-modifier-code =====================================

 -- Row 1 -----------------------------------
  Id = 1
  Code = missing
  Display = Missing
  Definition = The search parameter returns resources that have a value or not.

 -- Row 2 -----------------------------------
  Id = 2
  Code = exact
  Display = Exact
  Definition = The search parameter returns resources that have a value that exactly matches the supplied parameter (the whole string, including casing and accents).

 -- Row 3 -----------------------------------
  Id = 3
  Code = contains
  Display = Contains
  Definition = The search parameter returns resources that include the supplied parameter value anywhere within the field being searched.

 -- Row 4 -----------------------------------
  Id = 4
  Code = not
  Display = Not
  Definition = The search parameter returns resources that do not contain a match.

 -- Row 5 -----------------------------------
  Id = 5
  Code = text
  Display = Text
  Definition = The search parameter is processed as a string that searches text associated with the code/value - either CodeableConcept.text, Coding.display, or Identifier.type.text.

 -- Row 6 -----------------------------------
  Id = 6
  Code = in
  Display = In
  Definition = The search parameter is a URI (relative or absolute) that identifies a value set, and the search parameter tests whether the coding is in the specified value set.

 -- Row 7 -----------------------------------
  Id = 7
  Code = not-in
  Display = Not In
  Definition = The search parameter is a URI (relative or absolute) that identifies a value set, and the search parameter tests whether the coding is not in the specified value set.

 -- Row 8 -----------------------------------
  Id = 8
  Code = below
  Display = Below
  Definition = The search parameter tests whether the value in a resource is subsumed by the specified value (is-a, or hierarchical relationships).

 -- Row 9 -----------------------------------
  Id = 9
  Code = above
  Display = Above
  Definition = The search parameter tests whether the value in a resource subsumes the specified value (is-a, or hierarchical relationships).

 -- Row 10 -----------------------------------
  Id = 10
  Code = type
  Display = Type
  Definition = The search parameter only applies to the Resource Type specified as a modifier (e.g. the modifier is not actually :type, but :Patient etc.).

=== Sheet Invariants =====================================

 -- Row 1 -----------------------------------
  Id = 1
  Context = SearchParameter
  English = If an xpath is present, there SHALL be an xpathUsage
  XPath = not(exists(f:xpath)) or exists(f:xpathUsage)
  Expression = xpath.empty() or xpathUsage.exists()
  Severity = error

 -- Row 2 -----------------------------------
  Id = 2
  Context = SearchParameter
  English = Search parameters can only have chain names when the search parameter type is \'reference\'
  XPath = not(exists(f:chain)) or (f:type/@value = \'reference\')
  Expression = chain.empty() or type = \'reference\'

=== Sheet Data Elements =====================================

 -- Row 1 -----------------------------------
  Element = SearchParameter
  Card. = 1..1
  UML = 0;0
  Type = MetadataResource
  Short Name = Search Parameter for a resource
  Definition = A search parameter that defines a named search item that can be used to search/filter on a resource.
  Comments = In FHIR, search is not performed directly on a resource (by XML or JSON path), but on a named parameter that maps into the resource content
  v2 Mapping = n/a
  RIM Mapping = n/a
  w5 = conformance.behavior

 -- Row 2 -----------------------------------
  Element = SearchParameter.url
  Card. = 1..1
  Requirements = & To allow referencing and reusing search parameter definitions under other names on operational systems (in case of name clash)

 -- Row 3 -----------------------------------
  Element = SearchParameter.version

 -- Row 4 -----------------------------------
  Element = SearchParameter.name
  Card. = 1..1

 -- Row 5 -----------------------------------
  Element = SearchParameter.status

 -- Row 6 -----------------------------------
  Element = SearchParameter.experimental

 -- Row 7 -----------------------------------
  Element = SearchParameter.date

 -- Row 8 -----------------------------------
  Element = SearchParameter.publisher

 -- Row 9 -----------------------------------
  Element = SearchParameter.contact
  UML = 350;60

 -- Row 10 -----------------------------------
  Element = SearchParameter.useContext

 -- Row 11 -----------------------------------
  Element = SearchParameter.jurisdiction

 -- Row 12 -----------------------------------
  Element = SearchParameter.purpose

 -- Row 13 -----------------------------------
  Element = SearchParameter.code
  Card. = 1..1
  Summary = Y
  Type = code
  Binding = !
  Short Name = Code used in URL
  Definition = The code used in the URL or the parameter name in a parameters resource for this search parameter
  Comments = For maximum compatibility, use only lowercase ASCII characters

 -- Row 14 -----------------------------------
  Element = SearchParameter.base
  Card. = 1..*
  Summary = Y
  Type = code
  Binding = ResourceType
  Short Name = The resource type(s) this search parameter applies to
  Definition = The base resource type(s) that this search parameter can be used against
  Comments = A search parameter must always have at least one type. When search parameters have more than one resource, they can be used against any of the listed resource types, or in a cross-type search (see [Cross Resource Search](http.html#xres-search))

 -- Row 15 -----------------------------------
  Element = SearchParameter.type
  Card. = 1..1
  Summary = y
  Type = code
  Binding = SearchParamType
  Short Name = number | date | string | token | reference | composite | quantity | uri
  Definition = The type of value a search parameter refers to, and how the content is interpreted

 -- Row 16 -----------------------------------
  Element = SearchParameter.derivedFrom
  Card. = 0..1
  Type = uri
  Short Name = Original Definition for the search parameter
  Definition = Where this search parameter is originally defined. If a derivedFrom is provided, then the details in the search parameter must be consistent with the definition from which it is defined. I.e. the parameter should have the same meaning, and (usually) the functionality should be a proper subset of the underlying search parameter
  Comments = The intent of this is that a server can designate that it provides support for a search parameter defined in the specification itself (e.g.  [`value-quantity`](http://hl7.org/fhir/SearchParameter/Observation-value-quantity), but detail how it is supported by the server

 -- Row 17 -----------------------------------
  Element = SearchParameter.description
  Card. = 1..1
  Summary = y
  Definition = & and how it used

 -- Row 18 -----------------------------------
  Element = SearchParameter.expression
  Card. = 0..1
  Inv. = 1
  Type = string
  Short Name = FHIRPath expression that extracts the values
  Definition = A FHIRPath expression that returns a set of elements for the search parameter
  Comments = Note that the elements returned by the expression are sometimes complex elements where logic is required to determine quite how to handle them; e.g. CodeableConcepts may contain text and/or multiple codings, where the codings themselves contain a code and a system. For composite search parameters, the outcome of the expression must a collection of base elements from which the composites are derived

 -- Row 19 -----------------------------------
  Element = SearchParameter.xpath
  Card. = 0..1
  Inv. = 1
  Type = string
  Short Name = XPath that extracts the values
  Definition = An XPath expression that returns a set of elements for the search parameter
  Comments = Note that the elements returned by the XPath are sometimes complex elements where logic is required to determine quite how to handle them; e.g. CodeableConcepts may contain text and/or multiple codings, where the codings themselves contain a code and a system

 -- Row 20 -----------------------------------
  Element = SearchParameter.xpathUsage
  Card. = 0..1
  Inv. = 1
  Type = code
  Binding = XPathUsageType
  Short Name = normal | phonetic | nearby | distance | other
  Definition = How the search parameter relates to the set of elements returned by evaluating the xpath query

 -- Row 21 -----------------------------------
  Element = SearchParameter.target
  Card. = 0..*
  Type = code
  Binding = ResourceType
  Short Name = Types of resource (if a resource reference)
  Definition = Types of resource (if a resource is referenced)

 -- Row 22 -----------------------------------
  Element = SearchParameter.comparator
  Card. = 0..*
  Type = code
  Binding = SearchComparator
  Short Name = eq | ne | gt | lt | ge | le | sa | eb | ap
  Definition = Comparators supported for the search parameter
  Comments = If no comparators are listed, clients should not expect servers to support any comparators

 -- Row 23 -----------------------------------
  Element = SearchParameter.modifier
  Card. = 0..*
  Type = code
  Binding = SearchModifierCode
  Short Name = missing | exact | contains | not | text | in | not-in | below | above | type
  Definition = A modifier supported for the search parameter

 -- Row 24 -----------------------------------
  Element = SearchParameter.chain
  Card. = 0..*
  Type = string
  Short Name = Chained names supported
  Definition = Contains the names of any search parameters which may be chained to the containing search parameter. Chained parameters may be added to search parameters of type reference, and specify that resources will only be returned if they contain a reference to a resource which matches the chained parameter value. Values for this field should be drawn from SearchParameter.code for a parameter on the target resource type
  Comments = Systems are not required to list all the chain names they support, but if they don\'t list them, clients may not know to use them

 -- Row 25 -----------------------------------
  Element = SearchParameter.component
  Card. = 0..*
  Short Name = For Composite resources to define the parts
  Definition = Used to define the parts of a composite search parameter

 -- Row 26 -----------------------------------
  Element = SearchParameter.component.definition
  Card. = 1..1
  Type = Reference(SearchParameter)
  Short Name = Defines how the part works
  Definition = The definition of the search parameter that describes this part

 -- Row 27 -----------------------------------
  Element = SearchParameter.component.expression
  Card. = 1..1
  Type = string
  Short Name = Subexpression relative to main expression
  Definition = A sub-expression that defines how to extract values for this component from the output of the main SearchParameter.expression
  Comments = This expression overrides the expression in the definition, and extracts the index values from the outcome of the composite expression

=== Sheet Search =====================================

 -- Row 1 -----------------------------------
  Name = base
  Type = token
  Path = SearchParameter.base

 -- Row 2 -----------------------------------
  Name = type
  Type = token
  Path = SearchParameter.type

 -- Row 3 -----------------------------------
  Name = target
  Type = token
  Path = SearchParameter.target

 -- Row 4 -----------------------------------
  Name = code
  Type = token
  Path = SearchParameter.code

 -- Row 5 -----------------------------------
  Name = component
  Type = reference
  Path = SearchParameter.component.definition

 -- Row 6 -----------------------------------
  Name = derived-from
  Type = uri
  Path = SearchParameter.derivedFrom

=== Sheet Profiles =====================================

 -- Row 1 -----------------------------------
  Name = SearchParameter.extensions
  IG Name = core
  Filename = searchparameter-extensions.xml
  Type = spreadsheet

=== Sheet Examples =====================================

 -- Row 1 -----------------------------------
  Name = General
  Identity = example
  Description = General example
  Filename = searchparameter-example.xml

 -- Row 2 -----------------------------------
  Name = Extension
  Identity = example-extension
  Description = Search parameter for an extension example
  Filename = searchparameter-example-extension.xml

 -- Row 3 -----------------------------------
  Name = Reference
  Identity = example-reference
  Description = Search parameter for a reference example
  Filename = searchparameter-example-reference.xml

=== Sheet Examples =====================================
