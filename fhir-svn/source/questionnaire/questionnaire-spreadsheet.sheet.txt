
=== Sheet Bindings =====================================

 -- Row 1 -----------------------------------
  Binding Name = QuestionnaireConcept
  Binding = value set
  Reference = valueset-questionnaire-questions
  Definition = Codes for questionnaires, groups and individual questions
  Conformance = example

 -- Row 2 -----------------------------------
  Binding Name = QuestionnaireItemType
  Binding = code list
  Reference = #item-type
  Definition = Distinguishes groups from questions and display text and indicates data type for questions
  Conformance = required

 -- Row 3 -----------------------------------
  Binding Name = QuestionnaireQuestionOption
  Binding = value set
  Reference = valueset-questionnaire-answers
  Definition = Allowed values to answer questions.
  Conformance = example

 -- Row 4 -----------------------------------
  Binding Name = QuestionnaireQuestionOption2
  Binding = value set
  Reference = valueset-questionnaire-answers
  Definition = Allowed values to answer questions.
  Conformance = example

=== Sheet item-type =====================================

 -- Row 1 -----------------------------------
  Id = 15
  Code = group
  Definition = An item with no direct answer but should have at least one child item.

 -- Row 2 -----------------------------------
  Id = 16
  Code = display
  Definition = Text for display that will not capture an answer or have child items.

 -- Row 3 -----------------------------------
  Id = 17
  Abstract = Y
  Code = question
  Definition = An item that defines a specific answer to be captured, and may have child items.\n(the answer provided in the QuestionnaireResponse should be of the defined datatype)

 -- Row 4 -----------------------------------
  Id = 1
  Code = boolean
  Definition = Question with a yes/no answer (valueBoolean)
  Parent = #17

 -- Row 5 -----------------------------------
  Id = 2
  Code = decimal
  Definition = Question with is a real number answer (valueDecimal)
  Parent = #17

 -- Row 6 -----------------------------------
  Id = 3
  Code = integer
  Definition = Question with an integer answer (valueInteger)
  Parent = #17

 -- Row 7 -----------------------------------
  Id = 4
  Code = date
  Definition = Question with a date answer (valueDate)
  Parent = #17

 -- Row 8 -----------------------------------
  Id = 5
  Code = dateTime
  Definition = Question with a date and time answer (valueDateTime)
  Parent = #17

 -- Row 9 -----------------------------------
  Id = 8
  Code = time
  Definition = Question with a time (hour:minute:second) answer independent of date. (valueTime)
  Parent = #17

 -- Row 10 -----------------------------------
  Id = 8
  Code = string
  Definition = Question with a short (few words to short sentence) free-text entry answer (valueString)
  Parent = #17

 -- Row 11 -----------------------------------
  Id = 9
  Code = text
  Definition = Question with a long (potentially multi-paragraph) free-text entry answer (valueString)
  Parent = #17

 -- Row 12 -----------------------------------
  Id = 16
  Code = url
  Definition = Question with a URL (website, FTP site, etc.) answer (valueUri)
  Parent = #17

 -- Row 13 -----------------------------------
  Id = 10
  Code = choice
  Definition = Question with a Coding drawn from a list of options (specified in either the option property, or via the valueset referenced in the options property) as an answer (valueCoding)
  Parent = #17

 -- Row 14 -----------------------------------
  Id = 11
  Code = open-choice
  Definition = Answer is a Coding drawn from a list of options (as with the choice type) or a free-text entry in a string (valueCoding or valueString)
  Parent = #17

 -- Row 15 -----------------------------------
  Id = 12
  Code = attachment
  Definition = Question with binary content such as a image, PDF, etc. as an answer (valueAttachment)
  Parent = #17

 -- Row 16 -----------------------------------
  Id = 13
  Code = reference
  Definition = Question with a reference to another resource (practitioner, organization, etc.) as an answer (valueReference)
  Parent = #17

 -- Row 17 -----------------------------------
  Id = 14
  Code = quantity
  Definition = Question with a combination of a numeric value and unit, potentially with a comparator (<, >, etc.) as an answer. (valueQuantity)\nThere is an extension \'http://hl7.org/fhir/StructureDefinition/questionnaire-unit\' that can be used to define what unit whould be captured (or the a unit that has a ucum conversion from the provided unit)
  Parent = #17

=== Sheet Invariants =====================================

 -- Row 1 -----------------------------------
  Id = 1
  Context = Questionnaire.item
  English = Group items must have nested items, display items cannot have nested items
  XPath = not((f:type/@value=\'group\' and not(f:item)) or (f:type/@value=\'display\' and f:item))
  Expression = (type=\'group\' implies item.empty().not()) and (type.trace(\'type\')=\'display\' implies item.trace(\'item\').empty())

 -- Row 2 -----------------------------------
  Id = 2
  Context = Questionnaire
  English = The link ids for groups and questions must be unique within the questionnaire
  XPath = count(descendant::f:linkId/@value)=count(distinct-values(descendant::f:linkId/@value))
  Expression = descendants().linkId.isDistinct()

 -- Row 3 -----------------------------------
  Id = 3
  Context = Questionnaire.item
  English = Display items cannot have a \"code\" asserted
  XPath = not(f:type/@value=\'display\' and f:code)
  Expression = type!=\'display\' or code.empty()

 -- Row 4 -----------------------------------
  Id = 4
  Context = Questionnaire.item
  English = A question cannot have both option and options
  XPath = not(f:options and f:option)
  Expression = option.empty() or options.empty()

 -- Row 5 -----------------------------------
  Id = 5
  Context = Questionnaire.item
  English = Only \'choice\' items can have options
  XPath = f:type/@value=(\'choice\',\'open-choice\') or not(f:option or f:options)
  Expression = (type =\'choice\' or type = \'open-choice\') or (options.empty() and option.empty())

 -- Row 6 -----------------------------------
  Id = 6
  Context = Questionnaire.item
  English = Required and repeat aren\'t permitted for display items
  XPath = not(f:type/@value=\'display\' and (f:required or f:repeats))
  Expression = type!=\'display\' or (required.empty() and repeats.empty())

 -- Row 7 -----------------------------------
  Id = 7
  Context = Questionnaire.item.enableWhen
  English = enableWhen must contain either a \'answer\' or a \'hasAnswer\' element
  XPath = count(f:*[starts-with(local-name(.), \'answer\')]|self::f:hasAnswer) = 1
  Expression = hasAnswer.exists() xor answer.exists()

 -- Row 8 -----------------------------------
  Id = 8
  Context = Questionnaire.item
  English = Default values can\'t be specified for groups or display items
  XPath = not(f:type/@value=(\'group\', \'display\') and f:*[starts-with(local-name(.), \'initial\')])
  Expression = (type!=\'group\' and type!=\'display\') or initial.empty()
  Severity = error

 -- Row 9 -----------------------------------
  Id = 9
  Context = Questionnaire.item
  English = Read-only can\'t be specified for \"display\" items
  XPath = not(f:type/@value=\'display\' and f:readOnly)
  Expression = type!=\'display\' or readOnly.empty()
  Severity = error

 -- Row 10 -----------------------------------
  Id = 10
  Context = Questionnaire.item
  English = Maximum length can only be declared for simple question types
  XPath = f:type/@value=(\'boolean\', \'decimal\', \'integer\', \'open-choice\', \'string\', \'text\', \'url\') or not(f:maxLength)
  Expression = (type in (\'boolean\' | \'decimal\' | \'integer\' | \'string\' | \'text\' | \'url\')) or maxLength.empty()
  Severity = error

=== Sheet Data Elements =====================================

 -- Row 1 -----------------------------------
  Element = Questionnaire
  Aliases = Form, CRF, Survey
  Type = MetadataResource
  Short Name = A structured set of questions
  Definition = A structured set of questions intended to guide the collection of answers from end-users. Questionnaires provide detailed control over order, presentation, phraseology and grouping to allow coherent, consistent data collection
  Requirements = To support structured, hierarchical registration of data gathered using digital forms and other questionnaires.  Questionnaires provide greater control over presentation and allow capture of data in a domain-independent way (i.e. capturing information that would otherwise require multiple distinct types of resources)
  RIM Mapping = Observation[moodCode=DEF]
  w5 = infrastructure.information

 -- Row 2 -----------------------------------
  Element = Questionnaire.url
  Requirements = …  This is the id that will be used to link a QuestionnaireResponse to the Questionnaire the response is for.
  RIM Mapping = .identifier[scope=BUSN;reliability=ISS]

 -- Row 3 -----------------------------------
  Element = Questionnaire.identifier
  RIM Mapping = .identifier
  Committee Notes = Is this 80%?

 -- Row 4 -----------------------------------
  Element = Questionnaire.version
  RIM Mapping = N/A (to add?)

 -- Row 5 -----------------------------------
  Element = Questionnaire.name
  RIM Mapping = N/A

 -- Row 6 -----------------------------------
  Element = Questionnaire.title
  RIM Mapping = .title

 -- Row 7 -----------------------------------
  Element = Questionnaire.status
  RIM Mapping = .status

 -- Row 8 -----------------------------------
  Element = Questionnaire.experimental
  RIM Mapping = N/A

 -- Row 9 -----------------------------------
  Element = Questionnaire.date
  RIM Mapping = .participation[typeCode=AUT].time

 -- Row 10 -----------------------------------
  Element = Questionnaire.publisher
  RIM Mapping = .participation[typeCode=AUT].role

 -- Row 11 -----------------------------------
  Element = Questionnaire.description
  RIM Mapping = .text

 -- Row 12 -----------------------------------
  Element = Questionnaire.purpose
  RIM Mapping = .reasonCode.text

 -- Row 13 -----------------------------------
  Element = Questionnaire.approvalDate
  RIM Mapping = .outboundRelationship[typeCode=\"SUBJ\"].act[classCode=CACT;moodCode=EVN;code=\"approval\"].effectiveTime

 -- Row 14 -----------------------------------
  Element = Questionnaire.lastReviewDate
  RIM Mapping = .outboundRelationship[typeCode=\"SUBJ\"; subsetCode=\"RECENT\"].act[classCode=CACT;moodCode=EVN;code=\"review\"].effectiveTime

 -- Row 15 -----------------------------------
  Element = Questionnaire.effectivePeriod
  RIM Mapping = N/A (to add?)

 -- Row 16 -----------------------------------
  Element = Questionnaire.useContext
  RIM Mapping = N/A (to add?)

 -- Row 17 -----------------------------------
  Element = Questionnaire.jurisdiction
  RIM Mapping = N/A (to add?)

 -- Row 18 -----------------------------------
  Element = Questionnaire.contact
  RIM Mapping = .participation[typeCode=CALLBCK].role

 -- Row 19 -----------------------------------
  Element = Questionnaire.copyright
  RIM Mapping = N/A (to add?)

 -- Row 20 -----------------------------------
  Element = Questionnaire.code
  Card. = 0..*
  Summary = Y
  Type = Coding
  Binding = QuestionnaireConcept
  Short Name = Concept that represents the overall questionnaire
  Definition = An identifier for this question or group of questions in a particular terminology such as LOINC.
  Requirements = Allows linking of the complete Questionnaire resources to formal terminologies.  It\'s common for \"panels\" of questions to be identified by a code.
  RIM Mapping = .code

 -- Row 21 -----------------------------------
  Element = Questionnaire.subjectType
  Card. = 0..*
  Summary = y
  Type = code
  Binding = ResourceType
  Short Name = Resource that can be subject of QuestionnaireResponse
  Definition = The types of subjects that can be the subject of responses created for the questionnaire.
  Comments = If none are specified, then the subject is unlimited
  RIM Mapping = .outboundRelationship[typeCode=META].target[classCode=OBS, moodCode=DEFN, isCriterion=true].participation.role.classCode

 -- Row 22 -----------------------------------
  Element = Questionnaire.item
  Card. = 0..*
  UML = right
  Inv. = 3
  Short Name = Questions and sections within the Questionnaire
  Definition = A particular question, question grouping or display text that is part of the questionnaire
  Comments = The content of the questionnaire is constructed from an ordered, hierarchical collection of items
  RIM Mapping = .outboundRelationship[typeCode=COMP].target[classCode=OBS, moodCode=DEF]

 -- Row 23 -----------------------------------
  Element = Questionnaire.item.linkId
  Card. = 1..1
  Type = string
  Short Name = Unique id for item in questionnaire
  Definition = An identifier that is unique within the Questionnaire allowing linkage to the equivalent item in a QuestionnaireResponse resource.
  Requirements = [[[QuestionnaireResponse]]] does not require omitted items to be included and may have some items that repeat, so linkage based on position alone is not sufficient.
  Comments = This \'\'can\'\' be a meaningful identifier (e.g. a LOINC code) but is not intended to have any meaning.  GUIDs or sequential numbers are appropriate here.
  RIM Mapping = .id

 -- Row 24 -----------------------------------
  Element = Questionnaire.item.definition
  Card. = 0..1
  Type = uri
  Short Name = ElementDefinition - details for the item
  Definition = A reference to an [[[ElementDefinition]]] that provides the details for the item. If a definition is provided, then the following element values can be inferred from the definition: \n\n* code (ElementDefinition.code)\n* type (ElementDefinition.type)\n* required (ElementDefinition.min)\n* repeats (ElementDefinition.max)\n* maxLength (ElementDefinition.maxLength)\n* options (ElementDefinition.binding)\n\nAny information provided in these elements on a Questionnaire Item overrides the information from the definition
  Requirements = A common pattern is to define a set of data elements and then build multiple questionnaires for different circumstances to gather the data. This element provides traceability to the common definition and allows the content for the question to come from the underlying definition
  Comments = the URI refers to an ElementDefinition in [[[StructureDefinition]]] and always starts with the canonical URL for the target resource. When referring to a StructureDefinition, a fragment identifier is used to specify the element definition by its id [Element.id](element-definitions.html#Element.id). E.g. http://hl7.org/fhir/StructureDefinition/Observation#Observation.value[x]. In the absence of a fragment identifier, the first/root element definition in the target is the matching element definition.
  RIM Mapping = .outboundRelationship[typeCode=INST].target[classCode=OBS, moodCode=DEF]

 -- Row 25 -----------------------------------
  Element = Questionnaire.item.code
  Card. = 0..*
  Summary = Y
  Inv. = 3
  Type = Coding
  Binding = QuestionnaireConcept
  Short Name = Corresponding concept for this item in a terminology
  Definition = A terminology code that corresponds to this group or question (e.g. a code from LOINC, which defines many questions and answers)
  Requirements = Allows linking of groups of questions to formal terminologies
  Comments = The value may come from the ElementDefinition referred to by .definition
  RIM Mapping = .code

 -- Row 26 -----------------------------------
  Element = Questionnaire.item.prefix
  Card. = 0..1
  Aliases = label
  Type = string
  Short Name = E.g. \"1(a)\", \"2.5.3\"
  Definition = A short label for a particular group, question or set of display text within the questionnaire used for reference by the individual completing the questionnaire.
  Requirements = Separating the label from the question text allows improved rendering.  Also, instructions will often refer to specific prefixes, so there\'s a need for the questionnaire design to have control over what labels are used.
  Comments = These are generally unique within a questionnaire, though this is not guaranteed. Some questionnaires may have multiple questions with the same label with logic to control which gets exposed.\n\nTypically these won\'t be used for \"display\" items, though such use is not prohibited.\n\nSystems SHOULD NOT generate their own prefixes if prefixes are defined for any items within a Questionnaire.
  RIM Mapping = Not supported

 -- Row 27 -----------------------------------
  Element = Questionnaire.item.text
  Card. = 0..1
  Summary = Y
  Type = string
  Short Name = Primary text for the item
  Definition = The name of a section, the text of a question or text content for a display item
  RIM Mapping = .text

 -- Row 28 -----------------------------------
  Element = Questionnaire.item.type
  Card. = 1..1
  Type = code
  Binding = QuestionnaireItemType
  Short Name = group | display | boolean | decimal | integer | date | dateTime +
  Definition = The type of questionnaire item this is - whether text for display, a grouping of other items or a particular type of data to be captured (string, integer, coded choice, etc.)
  Requirements = Defines the format in which the user is to be prompted for the answer
  Comments = Additional constraints on the type of answer can be conveyed by extensions. The value may come from the ElementDefinition referred to by .definition
  RIM Mapping = N/A - MIF rather than RIM level

 -- Row 29 -----------------------------------
  Element = Questionnaire.item.enableWhen
  Card. = 0..*
  Is Modifier = Y
  Summary = Y
  UML = down
  Short Name = Only allow data when
  Definition = A constraint indicating that this item should only be enabled (displayed/allow answers to be captured) when the specified condition is true
  Requirements = Allows questionnaires to adapt based on answers to other questions. E.g. If physical gender is specified as a male, no need to capture pregnancy history.  Also allows conditional display of instructions or groups of questions
  Comments = If multiple repetitions of this extension are present, the item should be enabled when the condition for *any* of the repetitions is true.  I.e. treat \"enableWhen\"s as being joined by an \"or\" clause.\n\nThis element is a modifier because if enableWhen is present for an item, \"required\" is ignored unless one of the enableWhen conditions is met.
  RIM Mapping = N/A - MIF rather than RIM level

 -- Row 30 -----------------------------------
  Element = Questionnaire.item.enableWhen.question
  Card. = 1..1
  Type = string
  Short Name = Question that determines whether item is enabled
  Definition = The linkId for the question whose answer (or lack of answer) governs whether this item is enabled
  Comments = If multiple question occurrences are present for the same question (same linkId), then this refers to the nearest question occurrence reachable by tracing first the \"ancestor\" axis and then the \"preceding\" axis and then the \"following\" axis
  RIM Mapping = N/A - MIF rather than RIM level

 -- Row 31 -----------------------------------
  Element = Questionnaire.item.enableWhen.hasAnswer
  Card. = 0..1
  Inv. = 7
  Type = boolean
  Short Name = Enable when answered or not
  Definition = An indication that this item should be enabled only if the specified question is answered (hasAnswer=true) or not answered (hasAnswer=false)
  Comments = If answered=false and answer values are also provided, then they are treated as \"or\".  I.e. \"Enable if the question is unanswered or the answer is one of the specified values\".  If answered=true and answers are present, one of the specified answers must be met. (So there\'s little reason to specify answered=true if answers are present.)
  RIM Mapping = N/A - MIF rather than RIM level

 -- Row 32 -----------------------------------
  Element = Questionnaire.item.enableWhen.answer[x]
  Card. = 0..1
  Inv. = 7
  Type = boolean | decimal | integer | date | dateTime | time | string | uri | Attachment | Coding | Quantity | Reference(Any)
  Binding = QuestionnaireQuestionOption2
  Short Name = Value question must have
  Definition = An answer that the referenced question must match in order for the item to be enabled
  Comments = Multiple answers are treated as \"or\".  E.g. Enable if question 1 = A, C or E.  \n\nComponents not specified in the answer do not need to match.  For example, if enableWhen specifies code + system for a Coding, it is ok if the answer has a \"display\" element.  I.e. treat the answer as a \'pattern\'.\n\nThe dataType of this element must be the same as the data type of the question being referenced.
  RIM Mapping = N/A - MIF rather than RIM level

 -- Row 33 -----------------------------------
  Element = Questionnaire.item.required
  Card. = 0..1
  Inv. = 6
  Type = boolean
  Short Name = Whether the item must be included in data results
  Definition = An indication, if true, that the item must be present in a \"completed\" QuestionnaireResponse.  If false, the item may be skipped when answering the questionnaire.
  Comments = Questionnaire.item.required only has meaning for elements that are conditionally enabled with enableWhen if the condition evaluates to true.  If an item that contains other items is marked as required, that does not automatically make the contained elements required (though required groups must contain at least one child element). The value may come from the ElementDefinition referred to by .definition
  RIM Mapping = N/A - MIF rather than RIM level
  Default Value = False

 -- Row 34 -----------------------------------
  Element = Questionnaire.item.repeats
  Card. = 0..1
  Inv. = 6
  Type = boolean
  Short Name = Whether the item may repeat
  Definition = An indication, if true, that the item may occur multiple times in the response, collecting multiple answers answers for questions or multiple sets of answers for groups
  Requirements = Items may be used to create set of (related) questions that can be repeated to give multiple answers to such a set
  Comments = If a question is marked as repeats=true, then multiple answers can be provided for the question in the corresponding QuestionnaireResponse.  When rendering the questionnaire, it is up to the rendering software whether to render the question text for each answer repetition or to simply list each of the answers beneath the question.  (Which is most appropriate visually may depend on the type of answer as well as whether there are nested items.). The value may come from the ElementDefinition referred to by .definition
  RIM Mapping = N/A - MIF rather than RIM level
  Default Value = False

 -- Row 35 -----------------------------------
  Element = Questionnaire.item.readOnly
  Card. = 0..1
  Inv. = 9
  Type = boolean
  Short Name = Don\'t allow human editing
  Definition = An indication, when true, that the value cannot be changed by a human respondent to the Questionnaire.
  Requirements = Allows certain information to be phrased (and rendered) as a question and an answer, while keeping users from changing it.  May also be useful for preventing changes to pre-populated portions of a questionnaire, for calculated values, etc.
  Comments = The value of readOnly elements can be established by asserting  extensions for defaultValues, linkages that support pre-population and/or extensions that support calculation based on other answers.
  RIM Mapping = N/A - MIF rather than RIM level

 -- Row 36 -----------------------------------
  Element = Questionnaire.item.maxLength
  Card. = 0..1
  Inv. = 10
  Type = integer
  Short Name = No more than this many characters
  Definition = The maximum number of characters that are permitted in the answer to be considered a \"valid\" QuestionnaireResponse.
  Comments = For base64binary, reflects the number of characters representing the encoded data, not the number of bytes of the binary data. The value may come from the ElementDefinition referred to by .definition
  v2 Mapping = N/A
  RIM Mapping = N/A - MIF rather than RIM level

 -- Row 37 -----------------------------------
  Element = Questionnaire.item.options
  Card. = 0..1
  Inv. = 4,5
  Type = Reference(ValueSet)
  Short Name = Valueset containing permitted answers
  Definition = A reference to a value set containing a list of codes representing permitted answers for a \"choice\" or \"open-choice\" question
  Comments = LOINC defines many useful value sets for questionnaire responses. See [LOINC Answer Lists](loinc.html#alist). The value may come from the ElementDefinition referred to by .definition
  RIM Mapping = N/A - MIF rather than RIM level

 -- Row 38 -----------------------------------
  Element = Questionnaire.item.option
  Card. = 0..*
  UML = 100;400
  Inv. = 4,5
  Type = Coding
  Short Name = Permitted answer
  Definition = One of the permitted answers for a \"choice\" or \"open-choice\" question.
  Comments = This element can be used when the value set machinery of options is deemed too cumbersome or when there\'s a need to capture options that are not codes.
  RIM Mapping = N/A - MIF rather than RIM level

 -- Row 39 -----------------------------------
  Element = Questionnaire.item.option.value[x]
  Card. = 1..1
  Type = integer | date | time | string | Coding
  Binding = QuestionnaireQuestionOption
  Short Name = Answer value
  Definition = A potential answer that\'s allowed as the answer to this question
  Comments = The data type of the value must agree with the item.type
  RIM Mapping = N/A - MIF rather than RIM level

 -- Row 40 -----------------------------------
  Element = Questionnaire.item.initial[x]
  Card. = 0..1
  Inv. = 8
  Type = boolean | decimal | integer | date | dateTime | time | string | uri | Attachment | Coding | Quantity | Reference(Any)
  Binding = QuestionnaireQuestionOption2
  Short Name = Default value when item is first rendered
  Definition = The value that should be defaulted when initially rendering the questionnaire for user input
  Requirements = In some workflows, having defaults saves time.
  Comments = The user is allowed to change the value and override the default (unless marked as read-only). If the user doesn\'t change the value, then this initial value will be persisted when the QuestionnaireResponse is initially created.  Note that default values can influence results.\n\nThe data type of initial[x] must agree with the item.type.
  RIM Mapping = N/A - MIF rather than RIM level
  Committee Notes = GF#11003

 -- Row 41 -----------------------------------
  Element = Questionnaire.item.item
  Card. = 0..*
  Inv. = 1
  Type = @Questionnaire.item
  Short Name = Nested questionnaire items
  Definition = Text, questions and other groups to be nested beneath a question or group
  Requirements = Reports can consist of complex nested groups
  Comments = There is no specified limit to the depth of nesting.  However, Questionnaire authors are encouraged to consider the impact on the user and user interface of overly deep nesting
  RIM Mapping = .outboundRelationship[typeCode=COMP].target

=== Sheet Search =====================================

 -- Row 1 -----------------------------------
  Name = code
  Type = token
  Description = A code that corresponds to one of its items in the questionnaire
  Path = Questionnaire.item.code

=== Sheet Profiles =====================================

 -- Row 1 -----------------------------------
  Name = core-extensions
  IG Name = core
  Filename = questionnaire-extensions.xml
  Type = spreadsheet

=== Sheet Examples =====================================

 -- Row 1 -----------------------------------
  Name = General
  Identity = 3141
  Description = General questionnaire example
  Filename = questionnaire-example.xml

 -- Row 2 -----------------------------------
  Name = Lifelines
  Identity = f201
  Description = Real-world lifelines questionnaire (fictively taken from the patient)
  Filename = questionnaire-example-f201-lifelines.xml

 -- Row 3 -----------------------------------
  Name = BlueBook
  Identity = bb
  Description = Neonate record from New South Wales, Australia \"My Personal Health Record\" example
  Filename = questionnaire-example-bluebook.xml

 -- Row 4 -----------------------------------
  Name = Glasgow Coma Score
  Identity = gcs
  Description = Glasgow Coma Score example form
  Filename = questionnaire-example-gcs.xml

 -- Row 5 -----------------------------------
  Name = Zika Virus Exposure Assessment
  Identity = zika-virus-exposure-assessment
  Description = Example instrument for assessing Zika virus exposure potential
  Filename = questionnaire-zika-virus-exposure-assessment.xml

 -- Row 6 -----------------------------------
  Name = LOINC USSG Family History
  Identity = ussg-fht
  Description = LOINC US Surgeon General family history including value sets
  Filename = questionnaire-profile-example-ussg-fht.xml

=== Sheet Examples =====================================

 -- Row 1 -----------------------------------
  Name = populate
  Use = Resource | Instance
  Documentation = Generates a [[[QuestionnaireResponse]]] instance  based on a specified [[[Questionnaire]]], filling in answers to questions where possible based on information provided as part of the operation or already known by the server about the subject of the [[[Questionnaire]]].\n\nIf the operation is not called at the instance level, one and only one of the identifier, questionnaire or questionnaireRef \'in\' parameters must be provided. If called at the instance level, these parameters will be ignored.\n\nThe response will contain a [[[QuestionnaireResponse]]] instance based on the specified [[[Questionnaire]]] and/or an [[[OperationOutcome]]] resource with errors or warnings.\n\nThe [[[QuestionnaireResponse]]] instance will be populated with an unanswered set of questions following the group and question structure of the specified [[[Questionnaire]]].  If  *content* parameters were specified or the *local* parameter was set to true, some of the questions may have answers filled in as well.  In the case of repeating questions or groups, typically only one repetition will be provided unless answer values exist that would support populating multiple repetitions.\n\nPopulation of the [[[QuestionnaireResponse]]] with appropriate data is dependent on the questions and/or groups in the [[[Questionnaire]]] having metadata that allows the server to recognize the questions, e.g. through Questionnaire.item.definition or through use of the [[[ConceptMap]]] resource.\n\nRegardless of the mechanism used to link the questions in a questionnaire to a \"known\" mappable concept, solutions using this operation should ensure that the details of the question and associated linkage element are sufficiently similar as to safely allow auto-population; i.e. the question text and context must be sufficiently the same, the value set for the question must fall within the value set for the mapped element, the data types must be the same or convertible, etc.
  Type = operation
  Example.Request = $populate-request.txt
  Example.Response = $populate-response.txt
  Title = Populate Questionnaire
  Footer = While it is theoretically possible for a [[[QuestionnaireResponse]]] instance to be completely auto-populated and submitted without human review, the intention of this transaction is merely to reduce redundant data entry.  A client **SHOULD** ensure that a human submitter has an opportunity to review the auto-populated answers to confirm correctness as well as to complete or expand on information provided by the auto-population process.\n\nWhen creating an \"empty\" questionnaire, the general algorithm is to create a QuestionnaireResponse with one item for every item in the source Questionnaire, including items with \"enableWhen\", \"display\" items, etc.  If a question has a default, the default answer should be populated.  And the QuestionnaireResponse should point back to the originating Questionnaire.  Repeating items will typically only include a single repetition.  Other extensions and/or elements may also be populated if the system is aware of appropriate values.\n\nComplex form designs with conditional logic or tight constraints on cardinalities may be challenging to auto-populate.  A server MAY choose to traverse the questionnaire as if it were a human respondent, answering only those questions that are enabled based on previously answered questions.  However, doing so may result in minimal population.  Alternatively, systems may choose to populate all known answers, independent of dependencies and other constraints.  This may cause questions to be answered that should not be answered.  It will be up to the client to appropriately prune the final populated questionnaire once human review has taken place.\n\nInvoking this operation with the \'\'content\'\' parameter may involve the disclosure of personally identifiable healthcare information to the system which is performing the population process.  No such disclosures should be made unless the system on which the operation is being invoked is a \"trusted\" system and appropriate agreements are in place to protect the confidentiality of any information shared with that system.
  Idempotent = True

 -- Row 2 -----------------------------------
  Name = populate.identifier
  Use = in
  Documentation = A logical questionnaire identifier (i.e. \'\'Questionnaire.identifier\'\'). The server must know the questionnaire or be able to retrieve it from other known repositories.
  Type = uri
  Min = 0
  Max = 1

 -- Row 3 -----------------------------------
  Name = populate.questionnaire
  Use = in
  Documentation = The [[[Questionnaire]]] is provided directly as part of the request. Servers may choose not to accept questionnaires in this fashion
  Type = Questionnaire
  Min = 0
  Max = 1

 -- Row 4 -----------------------------------
  Name = populate.questionnaireRef
  Use = in
  Documentation = The [[[Questionnaire]]] is provided as a resource reference. Servers may choose not to accept questionnaires in this fashion or may fail if they cannot resolve or access the referenced questionnaire.
  Type = Reference(Questionnaire)
  Min = 0
  Max = 1

 -- Row 5 -----------------------------------
  Name = populate.subject
  Use = in
  Documentation = The resource that is to be the *QuestionnaireResponse.subject*. The [[[QuestionnaireResponse]]] instance will reference the provided subject.  In addition, if the *local* parameter is set to true, server information about the specified subject will be used to populate the instance.
  Type = Reference(Any)
  Min = 1
  Max = 1

 -- Row 6 -----------------------------------
  Name = populate.content
  Use = in
  Documentation = Resources containing information to be used to help populate the [[[QuestionnaireResponse]]].  These may be FHIR resources or may be binaries containing FHIR documents, CDA documents or other source materials.  Servers may not support all possible source materials and may ignore materials they do not recognize.  (They MAY provide warnings if ignoring submitted resources.)
  Type = Reference(Any)
  Min = 0
  Max = *

 -- Row 7 -----------------------------------
  Name = populate.local
  Use = in
  Documentation = If specified and set to \'true\' (and the server is capable), the server should use what resources and other knowledge it has about the referenced subject when pre-populating answers to questions.
  Type = boolean
  Min = 0
  Max = 1

 -- Row 8 -----------------------------------
  Name = populate.questionnaire
  Use = out
  Documentation = The partially (or fully)-populated set of answers for the specified Questionnaire
  Type = QuestionnaireResponse
  Min = 1
  Max = 1

 -- Row 9 -----------------------------------
  Name = populate.issues
  Use = out
  Documentation = A list of hints and warnings about problems encountered while populating the questionnaire. These might be show to the user as an advisory note. Note: if the questionnaire cannot be populated at all, then the operation should fail, and an OperationOutcome is returned directly with the failure, rather than using this parameter
  Type = OperationOutcome
  Min = 0
  Max = 1

 -- Row 10 -----------------------------------
  Name = populatehtml
  Use = Resource | Instance
  Documentation = Generates an HTML page as a [[[Binary]]] instance  based on a specified [[[Questionnaire]]], filling in answers to questions where possible based on information provided as part of the operation or already known by the server about the subject of the [[[Questionnaire]]].\n\nIf the operation is not called at the instance level, one and only one of the identifier, questionnaire or questionnaireRef \'in\' parameters must be provided. If called at the instance level, these parameters will be ignored.\n\nThe response will contain a [[[Binary]]] instance containing an HTML page for filling in and submitting the specified [[[Questionnaire]]] and/or an [[[OperationOutcome]]] resource with errors or warnings.\n\nThe generated HTML form instance will be populated with an unanswered set of questions following the group and question structure of the specified [[[Questionnaire]]].  If  *content* parameters were specified or the *local* parameter was set to true, some of the questions may have answers filled in as well.  In the case of repeating questions or groups, typically only one repetition will be provided unless answer values exist that would support populating multiple repetitions.\n\nPopulation of the HTML form with appropriate data is dependent on the questions and/or groups in the [[[Questionnaire]]] having metadata that allows the server to recognize the questions, e.g. through Questionnaire.item.definition or through use of the [[[ConceptMap]]] resource.\n\nRegardless of the mechanism used to link the questions in a questionnaire to a \"known\" mappable concept, solutions using this operation should ensure that the details of the question and associated linkage element are sufficiently similar as to safely allow auto-population; i.e. the question text and context must be sufficiently the same, the value set for the question must fall within the value set for the mapped element, the data types must be the same or convertible, etc.
  Type = operation
  Example.Request = $populatehtml-request.txt
  Example.Response = $populatehtml-response.txt
  Title = Generate HTML for Questionnaire
  Footer = While it is theoretically possible for an HTML form to be completely auto-populated and submitted without human review, the intention of this transaction is merely to reduce redundant data entry.  The HTML form **SHOULD** ensure that a human submitter has an opportunity to review the auto-populated answers to confirm correctness as well as to complete or expand on information provided by the auto-population process.\n\nComplex form designs with conditional logic or tight constraints on cardinalities may be challenging to auto-populate.  A server MAY choose to traverse the questionnaire as if it were a human respondent, answering only those questions that are enabled based on previously answered questions.  However, doing so may result in minimal population.  Alternatively, systems may choose to populate all known answers, independent of dependencies and other constraints.  This may cause questions to be answered that should not be answered.  The generated HTML form is responsible for pruning the final populated questionnaire once human review has taken place.\n\nInvoking this operation with the \'\'content\'\' parameter may involve the disclosure of personally identifiable healthcare information to the system which is performing the population process.  No such disclosures should be made unless the system on which the operation is being invoked is a \"trusted\" system and appropriate agreements are in place to protect the confidentiality of any information shared with that system.
  Idempotent = True

 -- Row 11 -----------------------------------
  Name = populatehtml.identifier
  Use = in
  Documentation = A logical questionnaire identifier (i.e. \'\'Questionnaire.identifier\'\'). The server must know the questionnaire or be able to retrieve it from other known repositories.
  Type = uri
  Min = 0
  Max = 1

 -- Row 12 -----------------------------------
  Name = populatehtml.questionnaire
  Use = in
  Documentation = The [[[Questionnaire]]] is provided directly as part of the request. Servers may choose not to accept questionnaires in this fashion
  Type = Questionnaire
  Min = 0
  Max = 1

 -- Row 13 -----------------------------------
  Name = populatehtml.questionnaireRef
  Use = in
  Documentation = The [[[Questionnaire]]] is provided as a resource reference. Servers may choose not to accept questionnaires in this fashion or may fail if they cannot resolve or access the referenced questionnaire.
  Type = Reference(Questionnaire)
  Min = 0
  Max = 1

 -- Row 14 -----------------------------------
  Name = populatehtml.content
  Use = in
  Documentation = Resources containing information to be used to help populate the generated HTML form.  These may be FHIR resources or may be binaries containing FHIR documents, CDA documents or other source materials.  Servers may not support all possible source materials and may ignore materials they do not recognize.  (They MAY provide warnings if ignoring submitted resources.)
  Type = Reference(Any)
  Min = 0
  Max = *

 -- Row 15 -----------------------------------
  Name = populatehtml.local
  Use = in
  Documentation = If specified and set to \'true\' (and the server is capable), the server should use what resources and other knowledge it has about the referenced subject when pre-populating answers to questions.
  Type = boolean
  Min = 0
  Max = 1

 -- Row 16 -----------------------------------
  Name = populatehtml.form
  Use = out
  Documentation = The generated HTML page that supports capturing the information defined by questionnaire, possibly partially (or fully)-populated with a set of answers for the specified Questionnaire
  Type = Binary
  Min = 1
  Max = 1

 -- Row 17 -----------------------------------
  Name = populatehtml.issues
  Use = out
  Documentation = A list of hints and warnings about problems encountered while populating the questionnaire. These might be show to the user as an advisory note. Note: if the questionnaire cannot be populated at all, then the operation should fail, and an OperationOutcome is returned directly with the failure, rather than using this parameter
  Type = OperationOutcome
  Min = 0
  Max = 1

 -- Row 18 -----------------------------------
  Name = populatelink
  Use = Resource | Instance
  Documentation = Generates a link to a web page to be used to answer a specified [[[Questionnaire]]].  The form at the specified location will be pre-filled with answers to questions where possible based on information provided as part of the operation or already known by the server about the subject of the [[[Questionnaire]]].\n\nIf the operation is not called at the instance level, one and only one of the identifier, questionnaire or questionnaireRef \'in\' parameters must be provided. If called at the instance level, these parameters will be ignored.\n\nThe response will contain a url for the web page to direct the user to.  The page will allow the user to complete/verify the questionnaire answers and to submit the form.\n\nThe specified page will be populated with an unanswered set of questions following the group and question structure of the specified [[[Questionnaire]]].  If  *content* parameters were specified or the *local* parameter was set to true, some of the questions may have answers filled in as well.  In the case of repeating questions or groups, typically only one repetition will be provided unless answer values exist that would support populating multiple repetitions.\n\nPopulation of the page with appropriate data is dependent on the questions and/or groups in the [[[Questionnaire]]] having metadata that allows the server to recognize the questions, e.g. through Questionnaire.item.definition or through use of the [[[ConceptMap]]] resource.\n\nRegardless of the mechanism used to link the questions in a questionnaire to a \"known\" mappable concept, solutions using this operation should ensure that the details of the question and associated linkage element are sufficiently similar as to safely allow auto-population; i.e. the question text and context must be sufficiently the same, the value set for the question must fall within the value set for the mapped element, the data types must be the same or convertible, etc.
  Type = operation
  Example.Request = $populatelink-request.txt
  Example.Response = $populatelink-response.txt
  Title = Generate a link to a Questionnaire completion webpage
  Footer = While it is theoretically possible for the questionnaire response to be completely auto-populated and submitted without human review, the intention of this transaction is merely to reduce redundant data entry.  The web page **SHOULD** ensure that a human submitter has an opportunity to review the auto-populated answers to confirm correctness as well as to complete or expand on information provided by the auto-population process.\n\nComplex form designs with conditional logic or tight constraints on cardinalities may be challenging to auto-populate.  A server MAY choose to traverse the questionnaire as if it were a human respondent, answering only those questions that are enabled based on previously answered questions.  However, doing so may result in minimal population.  Alternatively, systems may choose to populate all known answers, independent of dependencies and other constraints.  This may cause questions to be answered that should not be answered.  The web form is responsible for pruning the final populated questionnaire once human review has taken place.\n\nInvoking this operation with the \'\'content\'\' parameter may involve the disclosure of personally identifiable healthcare information to the system which is performing the population process.  No such disclosures should be made unless the system on which the operation is being invoked is a \"trusted\" system and appropriate agreements are in place to protect the confidentiality of any information shared with that system.
  Idempotent = True

 -- Row 19 -----------------------------------
  Name = populatelink.identifier
  Use = in
  Documentation = A logical questionnaire identifier (i.e. \'\'Questionnaire.identifier\'\'). The server must know the questionnaire or be able to retrieve it from other known repositories.
  Type = uri
  Min = 0
  Max = 1

 -- Row 20 -----------------------------------
  Name = populatelink.questionnaire
  Use = in
  Documentation = The [[[Questionnaire]]] is provided directly as part of the request. Servers may choose not to accept questionnaires in this fashion
  Type = Questionnaire
  Min = 0
  Max = 1

 -- Row 21 -----------------------------------
  Name = populatelink.questionnaireRef
  Use = in
  Documentation = The [[[Questionnaire]]] is provided as a resource reference. Servers may choose not to accept questionnaires in this fashion or may fail if they cannot resolve or access the referenced questionnaire.
  Type = Reference(Questionnaire)
  Min = 0
  Max = 1

 -- Row 22 -----------------------------------
  Name = populatelink.content
  Use = in
  Documentation = Resources containing information to be used to help populate the generated HTML form.  These may be FHIR resources or may be binaries containing FHIR documents, CDA documents or other source materials.  Servers may not support all possible source materials and may ignore materials they do not recognize.  (They MAY provide warnings if ignoring submitted resources.)
  Type = Reference(Any)
  Min = 0
  Max = *

 -- Row 23 -----------------------------------
  Name = populatelink.local
  Use = in
  Documentation = If specified and set to \'true\' (and the server is capable), the server should use what resources and other knowledge it has about the referenced subject when pre-populating answers to questions.
  Type = boolean
  Min = 0
  Max = 1

 -- Row 24 -----------------------------------
  Name = populatelink.link
  Use = out
  Documentation = The URL for the web form  that supports capturing the information defined by questionnaire, possibly partially (or fully)-populated with a set of answers for the specified Questionnaire
  Type = uri
  Min = 1
  Max = 1

 -- Row 25 -----------------------------------
  Name = populatelink.issues
  Use = out
  Documentation = A list of hints and warnings about problems encountered while populating the questionnaire. These might be show to the user as an advisory note. Note: if the questionnaire cannot be populated at all, then the operation should fail, and an OperationOutcome is returned directly with the failure, rather than using this parameter
  Type = OperationOutcome
  Min = 0
  Max = 1
