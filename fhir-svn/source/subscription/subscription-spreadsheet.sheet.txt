
=== Sheet Bindings =====================================

 -- Row 1 -----------------------------------
  Binding Name = SubscriptionChannelType
  Binding = code list
  Reference = #subscription-channel-type
  Definition = The type of method used to execute a subscription.
  Conformance = required

 -- Row 2 -----------------------------------
  Binding Name = SubscriptionStatus
  Binding = code list
  Reference = #subscription-status
  Definition = The status of a subscription.
  Conformance = required

 -- Row 3 -----------------------------------
  Binding Name = SubscriptionTag
  Binding = code list
  Reference = #subscription-tag
  Definition = Tags to put on a resource after subscriptions have been sent.
  Conformance = example

=== Sheet subscription-channel-type =====================================

 -- Row 1 -----------------------------------
  Id = 1
  Code = rest-hook
  Display = Rest Hook
  Definition = The channel is executed by making a post to the URI. If a payload is included, the URL is interpreted as the service base, and an update (PUT) is made.

 -- Row 2 -----------------------------------
  Id = 2
  Code = websocket
  Display = Websocket
  Definition = The channel is executed by sending a packet across a web socket connection maintained by the client. The URL identifies the websocket, and the client binds to this URL.

 -- Row 3 -----------------------------------
  Id = 3
  Code = email
  Display = Email
  Definition = The channel is executed by sending an email to the email addressed in the URI (which must be a mailto:).

 -- Row 4 -----------------------------------
  Id = 4
  Code = sms
  Display = SMS
  Definition = The channel is executed by sending an SMS message to the phone number identified in the URL (tel:).

 -- Row 5 -----------------------------------
  Id = 5
  Code = message
  Display = Message
  Definition = The channel is executed by sending a message (e.g. a Bundle with a MessageHeader resource etc.) to the application identified in the URI.

=== Sheet subscription-status =====================================

 -- Row 1 -----------------------------------
  Id = 1
  Code = requested
  Display = Requested
  Definition = The client has requested the subscription, and the server has not yet set it up.

 -- Row 2 -----------------------------------
  Id = 2
  Code = active
  Display = Active
  Definition = The subscription is active.

 -- Row 3 -----------------------------------
  Id = 3
  Code = error
  Display = Error
  Definition = The server has an error executing the notification.

 -- Row 4 -----------------------------------
  Id = 4
  Code = off
  Display = Off
  Definition = Too many errors have occurred or the subscription has expired.

=== Sheet subscription-tag =====================================

 -- Row 1 -----------------------------------
  Id = 1
  Code = queued
  Display = Queued
  Definition = The message has been queued for processing on a destination systems.

 -- Row 2 -----------------------------------
  Id = 2
  Code = delivered
  Display = Delivered
  Definition = The message has been delivered to its intended recipient.

=== Sheet Invariants =====================================

=== Sheet Data Elements =====================================

 -- Row 1 -----------------------------------
  Element = Subscription
  Aliases = WebHook, Hook, Routing Rule
  Type = DomainResource
  Short Name = A server push subscription criteria
  Definition = The subscription resource is used to define a push based subscription from a server to another system. Once a subscription is registered with the server, the server checks every resource that is created or updated, and if the resource matches the given criteria, it sends a message on the defined \"channel\" so that another system is able to take an appropriate action.
  RIM Mapping = N/A
  w5 = infrastructure.exchange

 -- Row 2 -----------------------------------
  Element = Subscription.status
  Card. = 1..1
  Is Modifier = Y
  Type = code
  Binding = SubscriptionStatus
  Short Name = requested | active | error | off
  Definition = The status of the subscription, which marks the server state for managing the subscription
  Comments = A client can only submit subscription resources in the requested or off state. Only the server can  move a subscription from requested to active, and then to error. Either the server or the client can turn a subscription off.\n\nThis element is labeled as a modifier because the status contains codes that mark the resource as not currently valid
  w5 = status

 -- Row 3 -----------------------------------
  Element = Subscription.contact
  Card. = 0..*
  Type = ContactPoint
  Short Name = Contact details for source (e.g. troubleshooting)
  Definition = Contact details for a human to contact about the subscription. The primary use of this for system administrator troubleshooting
  w5 = who.focus

 -- Row 4 -----------------------------------
  Element = Subscription.end
  Card. = 0..1
  Type = instant
  Short Name = When to automatically delete the subscription
  Definition = The time for the server to turn the subscription off
  Comments = The server is permitted to deviate from this time, but should observe it
  w5 = when.done

 -- Row 5 -----------------------------------
  Element = Subscription.reason
  Card. = 1..1
  Type = string
  Short Name = Description of why this subscription was created
  Definition = A description of why this subscription is defined
  w5 = why

 -- Row 6 -----------------------------------
  Element = Subscription.criteria
  Card. = 1..1
  Type = string
  Short Name = Rule for server push criteria
  Definition = The rules that the server should use to determine when to generate notifications for this subscription
  Comments = The rules are a search criteria (without the [base] part). Like Bundle.entry.request.url, it has no leading \"/\"

 -- Row 7 -----------------------------------
  Element = Subscription.error
  Card. = 0..1
  Type = string
  Short Name = Latest error note
  Definition = A record of the last error that occurred when the server processed a notification

 -- Row 8 -----------------------------------
  Element = Subscription.channel
  Card. = 1..1
  UML = 300;10
  Short Name = The channel on which to report matches to the criteria
  Definition = Details where to send notifications when resources are received that meet the criteria

 -- Row 9 -----------------------------------
  Element = Subscription.channel.type
  Card. = 1..1
  Type = code
  Binding = SubscriptionChannelType
  Short Name = rest-hook | websocket | email | sms | message
  Definition = The type of channel to send notifications on

 -- Row 10 -----------------------------------
  Element = Subscription.channel.endpoint
  Card. = 0..1
  Type = uri
  Short Name = Where the channel points to
  Definition = The uri that describes the actual end-point to send messages to
  Comments = For rest-hook, and websocket, the end-point must be an http: or https: URL; for email, a mailto: url, for sms, a tel: url, and for message the endpoint can be in any form of url the server understands (usually, http: or mllp:). The URI is allowed to be relative; in which case, it is relative to the server end-point (since their may be more than one, clients should avoid using relative URIs)

 -- Row 11 -----------------------------------
  Element = Subscription.channel.payload
  Card. = 0..1
  Type = string
  Short Name = Mimetype to send, or omit for no payload
  Definition = The mime type to send the payload in - either application/fhir+xml, or application/fhir+json. If the payload is not present, then there is no payload in the notification, just a notification
  Comments = Sending the payload has obvious security implications. The server is responsible for ensuring that the content is appropriately secured

 -- Row 12 -----------------------------------
  Element = Subscription.channel.header
  Card. = 0..*
  Type = string
  Short Name = Usage depends on the channel type
  Definition = Additional headers / information to send as part of the notification
  Comments = Exactly what these mean depend on the channel type. They can convey additional information to the recipient and/or meet security requirements; for example, support of multiple headers in the outgoing notifications for rest-hook type subscriptions.

 -- Row 13 -----------------------------------
  Element = Subscription.tag
  Card. = 0..*
  Type = Coding
  Binding = SubscriptionTag
  Short Name = A tag to add to matching resources
  Definition = A tag to add to any resource that matches the criteria, after the subscription is processed
  Comments = So that other systems can tell which resources have been the subject of a notification

=== Sheet Search =====================================

 -- Row 1 -----------------------------------
  Name = status
  Type = token
  Description = The current state of the subscription
  Path = Subscription.status

 -- Row 2 -----------------------------------
  Name = type
  Type = token
  Description = The type of channel for the sent notifications
  Path = Subscription.channel.type

 -- Row 3 -----------------------------------
  Name = url
  Type = uri
  Description = The uri that will receive the notifications
  Path = Subscription.channel.endpoint

 -- Row 4 -----------------------------------
  Name = criteria
  Type = string
  Description = The search rules used to determine when to send a notification
  Path = Subscription.criteria

 -- Row 5 -----------------------------------
  Name = payload
  Type = string
  Description = The mime-type of the notification payload
  Path = Subscription.channel.payload

 -- Row 6 -----------------------------------
  Name = contact
  Type = token
  Description = Contact details for the subscription
  Path = Subscription.contact

 -- Row 7 -----------------------------------
  Name = add-tag
  Type = token
  Description = A tag to be added to the resource matching the criteria
  Path = Subscription.tag

=== Sheet Profiles =====================================

=== Sheet Examples =====================================

 -- Row 1 -----------------------------------
  Name = Example
  Identity = example
  Description = Example Subscription
  Filename = subscription-example.xml

 -- Row 2 -----------------------------------
  Name = Error Example
  Identity = example-error
  Description = Example of subscription in error status
  Filename = subscription-example-error.xml

=== Sheet Examples =====================================
