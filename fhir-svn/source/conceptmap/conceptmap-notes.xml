<div xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/1999/xhtml ../../schema/fhir-xhtml.xsd" xmlns="http://www.w3.org/1999/xhtml">

<a name="notes"> </a>
<h2>Notes</h2>
<ul>
 <li>The value of the <code>system</code>, <code>version</code> and <code>code</code> elements are the same as used by the <a href="datatypes.html#Coding">Coding</a> data type</li>
 <li>When a mapping equivalence is characterized as "narrower", some explanation of the scope difference SHALL be provided in the comments</li>
 <li>The concept map is a statement of mapping in a single direction. The existence of a matching mapping in the reverse direction cannot be assumed to exist automatically, but only through human review.</li>
 <li>There should be only one <code>element</code> for each source concept. If there is more than one, the <code>target</code> statements are cumulative across them</li>
</ul>

<a name="groups"> </a>
<h2>Grouping Mappings</h2>
<p>
The concept mappings in <code>element</code> are arranged into groups that share common source/target systems.
These groups have no semantic signficance; they exist to make the representation more concise. Concept maps
may contain more than one group with the same source and target - this would be a less concise representation
but may be useful in order to maintain a fixed order for the concepts that are mapped.
</p>
<p>
Concepts that are labeled as 'unmatched' are considered to be unmatched in the target value set,
irrespective of whether they are contained in a group with a stated target system or not. Groups
that contain no target system may only contained 'unmatched' concepts. There is no difference in
the meaning of an <code>unmatched</code> target whether or not there is a stated target system.
</p>

<a name="implicit"> </a>
<h2>Implicit Code Systems</h2>

<p>
The ConceptMap resource is intended to map between concepts defined in a code system.
It can also be useful to use the ConceptMap resource to define relationships between
concepts defined in other kinds of resources. Here are some common kind of conceptual
maps:
</p>
<ul>
 <li>Between two elements in different <a href="structuredefinition.html">structure definitions</a> (e.g. between CDA and FHIR v2)</li>
 <li>Between a code system and a <a href="medication.html">Medication</a> resource</li>
</ul>
<p>
Though these resources are not explicitly defining code systems, they do define 'concept's that
can still usefully be treated as code systems for the sake of subsetting (e.g. <a href="valueset.html">ValueSet</a>)
and defining relationships (e.g. <code>ConceptMap</code>). Note that this is different from
<a href="structuremap.html">StructureMap</a> because that is intended to define an
executional transform between structures, not a conceptual model.
</p>
<p>
This table summarizes how to treat these items as a terminology:
</p>
<table class="grid">
 <tr>
  <td>StructureDefinition</td>
  <td>The <code>StructureDefinition.url</code> (canonical URL) is the <code>system</code>. Each <code>.snapshot.element.id</code> in the snapshot is a code in the code system</td>
 </tr>
 <tr>
  <td>Questionnaire</td>
  <td>The <code>Questionnaire.url</code> (canonical URL) is the <code>system</code>. Each <code>.item.linkId</code> in the snapshot is a code in the code system. Items with no linkId cannot be addressed</td>
 </tr>
 <tr>
  <td>Medication</td>
  <td>Medication resources are a bit different, since they don't have a canonical URL, and
    there are not multiple items in a resource. So to refer to a medication resource, the system
    is [base]/Medication, where base is the server address. The <a href="resource.html#id">Logical Id</a> of the resource is the code</td>
 </tr>
</table>

</div>
