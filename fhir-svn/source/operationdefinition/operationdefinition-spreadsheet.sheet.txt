
=== Sheet Bindings =====================================

 -- Row 1 -----------------------------------
  Binding Name = OperationKind
  Binding = code list
  Reference = #operation-kind
  Definition = Whether an operation is a normal operation or a query.
  Conformance = required

 -- Row 2 -----------------------------------
  Binding Name = OperationParameterUse
  Binding = code list
  Reference = #operation-parameter-use
  Definition = Whether an operation parameter is an input or an output parameter.
  Conformance = required

=== Sheet operation-kind =====================================

 -- Row 1 -----------------------------------
  Id = 1
  Code = operation
  Display = Operation
  Definition = This operation is invoked as an operation.

 -- Row 2 -----------------------------------
  Id = 2
  Code = query
  Display = Query
  Definition = This operation is a named query, invoked using the search mechanism.

=== Sheet operation-parameter-use =====================================

 -- Row 1 -----------------------------------
  Id = 1
  Code = in
  Display = In
  Definition = This is an input parameter.

 -- Row 2 -----------------------------------
  Id = 2
  Code = out
  Display = Out
  Definition = This is an output parameter.

=== Sheet Invariants =====================================

 -- Row 1 -----------------------------------
  Id = 1
  Context = OperationDefinition.parameter
  English = Either a type must be provided, or parts
  XPath = exists(f:type) or exists(f:part)
  Expression = type.exists() or part.exists()
  Severity = error

 -- Row 2 -----------------------------------
  Id = 2
  Context = OperationDefinition.parameter
  English = A search type can only be specified for parameters of type string
  XPath = not(exists(f:searchType)) or (f:type/@value = \'string\')
  Expression = searchType implies type = \'string\'
  Severity = error

=== Sheet Data Elements =====================================

 -- Row 1 -----------------------------------
  Element = OperationDefinition
  UML = 0;0
  Type = MetadataResource
  Short Name = Definition of an operation or a named query
  Definition = A formal computable definition of an operation (on the RESTful interface) or a named query (using the search interaction).
  Workflow Mapping = Definition
  RIM Mapping = n/a
  w5 = conformance.behavior

 -- Row 2 -----------------------------------
  Element = OperationDefinition.url
  Workflow Mapping = Definition.url

 -- Row 3 -----------------------------------
  Element = OperationDefinition.version
  Workflow Mapping = Definition.version

 -- Row 4 -----------------------------------
  Element = OperationDefinition.name
  Card. = 1..1
  Workflow Mapping = Definition.title

 -- Row 5 -----------------------------------
  Element = OperationDefinition.status
  Workflow Mapping = Definition.status {different ValueSet}

 -- Row 6 -----------------------------------
  Element = OperationDefinition.kind
  Card. = 1..1
  Type = code
  Binding = OperationKind
  Short Name = operation | query
  Definition = Whether this is an operation or a named query
  Comments = Named queries are invoked differently, and have different capabilities
  w5 = class

 -- Row 7 -----------------------------------
  Element = OperationDefinition.experimental
  Workflow Mapping = Definition.experimental

 -- Row 8 -----------------------------------
  Element = OperationDefinition.date
  Workflow Mapping = Definition.date

 -- Row 9 -----------------------------------
  Element = OperationDefinition.publisher
  Workflow Mapping = Definition.publisher

 -- Row 10 -----------------------------------
  Element = OperationDefinition.contact
  Workflow Mapping = Definition.contact

 -- Row 11 -----------------------------------
  Element = OperationDefinition.description
  Workflow Mapping = Definition.description

 -- Row 12 -----------------------------------
  Element = OperationDefinition.useContext
  Workflow Mapping = Definition.useContext

 -- Row 13 -----------------------------------
  Element = OperationDefinition.jurisdiction
  Workflow Mapping = Definition.jurisdiction

 -- Row 14 -----------------------------------
  Element = OperationDefinition.purpose
  Workflow Mapping = Definition.purpose

 -- Row 15 -----------------------------------
  Element = OperationDefinition.idempotent
  Card. = 0..1
  Summary = Y
  Type = boolean
  Short Name = Whether content is unchanged by the operation
  Definition = Operations that are idempotent (see [HTTP specification definition of idempotent](http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html)) may be invoked by performing an HTTP GET operation instead of a POST

 -- Row 16 -----------------------------------
  Element = OperationDefinition.code
  Card. = 1..1
  Summary = Y
  Type = code
  Binding = !
  Short Name = Name used to invoke the operation
  Definition = The name used to invoke the operation
  Comments = The code does not include the \'$\' prefix that is always included in the URL when the operation is invoked

 -- Row 17 -----------------------------------
  Element = OperationDefinition.comment
  Card. = 0..1
  Type = string
  Short Name = Additional information about use
  Definition = Additional information about how to use this operation or named query

 -- Row 18 -----------------------------------
  Element = OperationDefinition.base
  Card. = 0..1
  Summary = Y
  Type = Reference(OperationDefinition)
  Short Name = Marks this as a profile of the base
  Definition = Indicates that this operation definition is a constraining profile on the base
  Comments = A constrained profile can make optional parameters required or not used and clarify documentation
  Workflow Mapping = Definition.definition

 -- Row 19 -----------------------------------
  Element = OperationDefinition.resource
  Card. = 0..*
  Summary = Y
  Type = code
  Binding = ResourceType
  Short Name = Types this operation applies to
  Definition = The types on which this operation can be executed
  Comments = If the type is an abstract resource (\"Resource\" or \"DomainResource\") then the operation can be invoked on any concrete specialization
  Workflow Mapping = Definition.subjectCodableConcept

 -- Row 20 -----------------------------------
  Element = OperationDefinition.system
  Card. = 1..1
  Summary = Y
  Type = boolean
  Short Name = Invoke at the system level?
  Definition = Indicates whether this operation or named query can be invoked at the system level (e.g. without needing to choose a resource type for the context)

 -- Row 21 -----------------------------------
  Element = OperationDefinition.type
  Card. = 1..1
  Summary = Y
  Type = boolean
  Short Name = Invole at the type level?
  Definition = Indicates whether this operation or named query can be invoked at the resource type level for any given resource type level (e.g. without needing to choose a specific resource id for the context)

 -- Row 22 -----------------------------------
  Element = OperationDefinition.instance
  Card. = 1..1
  Summary = Y
  Type = boolean
  Short Name = Invoke on an instance?
  Definition = Indicates whether this operation can be invoked on a particular instance of one of the given types

 -- Row 23 -----------------------------------
  Element = OperationDefinition.parameter
  Card. = 0..*
  UML = 400;0
  Short Name = Parameters for the operation/query
  Definition = The parameters for the operation/query
  Comments = Query Definitions only have one output parameter, named \"result\". This may not be described, but can be to allow a profile to be defined

 -- Row 24 -----------------------------------
  Element = OperationDefinition.parameter.name
  Card. = 1..1
  Type = code
  Binding = !
  Short Name = Name in Parameters.parameter.name or in URL
  Definition = The name of used to identify the parameter
  Comments = This name must be a token (start with a letter in a..z, and only contain letters, numerals, and underscore. Note that for search parameters (type = string, with a search type), the name may be altered by the search modifiers

 -- Row 25 -----------------------------------
  Element = OperationDefinition.parameter.use
  Card. = 1..1
  Type = code
  Binding = OperationParameterUse
  Short Name = in | out
  Definition = Whether this is an input or an output parameter
  Comments = If a parameter name is used for both an input and an output parameter, the parameter should be defined twice

 -- Row 26 -----------------------------------
  Element = OperationDefinition.parameter.min
  Card. = 1..1
  Type = integer
  Short Name = Minimum Cardinality
  Definition = The minimum number of times this parameter SHALL appear in the request or response

 -- Row 27 -----------------------------------
  Element = OperationDefinition.parameter.max
  Card. = 1..1
  Type = string
  Short Name = Maximum Cardinality (a number or *)
  Definition = The maximum number of times this element is permitted to appear in the request or response

 -- Row 28 -----------------------------------
  Element = OperationDefinition.parameter.documentation
  Card. = 0..1
  Type = string
  Short Name = Description of meaning/use
  Definition = Describes the meaning or use of this parameter

 -- Row 29 -----------------------------------
  Element = OperationDefinition.parameter.type
  Card. = 0..1
  Inv. = 1
  Type = code
  Binding = FHIRAllTypes
  Short Name = What type this parameter has
  Definition = The type for this parameter
  Comments = if there is no stated parameter, then the parameter is a multi-part parameter; type and must have at least one part defined

 -- Row 30 -----------------------------------
  Element = OperationDefinition.parameter.searchType
  Card. = 0..1
  Inv. = 2
  Type = code
  Binding = SearchParamType
  Short Name = number | date | string | token | reference | composite | quantity | uri
  Definition = How the parameter is understood as a search parameter. This is only used if the parameter type is \'string\'

 -- Row 31 -----------------------------------
  Element = OperationDefinition.parameter.profile
  Card. = 0..1
  Type = Reference(StructureDefinition)
  Short Name = Profile on the type
  Definition = A profile the specifies the rules that this parameter must conform to

 -- Row 32 -----------------------------------
  Element = OperationDefinition.parameter.binding
  Card. = 0..1
  UML = 400;230
  Short Name = ValueSet details if this is coded
  Definition = Binds to a value set if this parameter is coded (code, Coding, CodeableConcept)

 -- Row 33 -----------------------------------
  Element = OperationDefinition.parameter.binding.strength
  Card. = 1..1
  Aliases = conformance; extensibility
  Type = code
  Binding = BindingStrength
  Short Name = required | extensible | preferred | example
  Definition = Indicates the degree of conformance expectations associated with this binding - that is, the degree to which the provided value set must be adhered to in the instances
  Comments = For further discussion, see [[[Using Terminologies]]]

 -- Row 34 -----------------------------------
  Element = OperationDefinition.parameter.binding.valueSet[x]
  Card. = 1..1
  Type = uri | Reference(ValueSet)
  Short Name = Source of value set
  Definition = Points to the value set or external definition (e.g. implicit value set) that identifies the set of codes to be used
  Comments = For value sets with a referenceResource, the display can contain the value set description.  The reference may be version-specific or not

 -- Row 35 -----------------------------------
  Element = OperationDefinition.parameter.part
  Card. = 0..*
  UML = right
  Inv. = 1
  Type = @OperationDefinition.parameter
  Short Name = Parts of a nested Parameter
  Definition = The parts of a nested Parameter
  Comments = Query Definitions only have one output parameter, named \"result\". This may not be described, but can be to allow a profile to be defined

 -- Row 36 -----------------------------------
  Element = OperationDefinition.overload
  Card. = 0..*
  UML = left
  Short Name = Define overloaded variants for when  generating code
  Definition = Defines an appropriate combination of parameters to use when invoking this operation, to help code generators when generating overloaded parameter sets for this operation
  Comments = The combinations are suggestions as to which sets of parameters to use together, but the combinations are not intended to be authoritative

 -- Row 37 -----------------------------------
  Element = OperationDefinition.overload.parameterName
  Card. = 0..*
  Type = string
  Short Name = Name of parameter to include in overload
  Definition = Name of parameter to include in overload

 -- Row 38 -----------------------------------
  Element = OperationDefinition.overload.comment
  Card. = 0..1
  Type = string
  Short Name = Comments to go on overload
  Definition = Comments to go on overload

=== Sheet Search =====================================

 -- Row 1 -----------------------------------
  Name = code
  Type = token
  Path = OperationDefinition.code

 -- Row 2 -----------------------------------
  Name = kind
  Type = token
  Path = OperationDefinition.kind

 -- Row 3 -----------------------------------
  Name = base
  Type = reference
  Path = OperationDefinition.base

 -- Row 4 -----------------------------------
  Name = system
  Type = token
  Path = OperationDefinition.system

 -- Row 5 -----------------------------------
  Name = type
  Type = token
  Path = OperationDefinition.type

 -- Row 6 -----------------------------------
  Name = instance
  Type = token
  Path = OperationDefinition.instance

 -- Row 7 -----------------------------------
  Name = param-profile
  Type = reference
  Path = OperationDefinition.parameter.profile

=== Sheet Profiles =====================================

=== Sheet Examples =====================================

 -- Row 1 -----------------------------------
  Name = example
  Identity = example
  Description = OperationDefinition example
  Filename = operationdefinition-example.xml
  Type = xml

 -- Row 2 -----------------------------------
  Name = vsexpansion
  Identity = ValueSet-expand
  Description = ValueSet Expansion
  Filename = operation-valueset-expand.xml
  Type = tool

 -- Row 3 -----------------------------------
  Name = vsvalidation
  Identity = ValueSet-validate-code
  Description = ValueSet Validation
  Filename = operation-valueset-validate-code.xml
  Type = tool

 -- Row 4 -----------------------------------
  Name = vslookup
  Identity = CodeSystem-lookup
  Description = ValueSet Lookup
  Filename = operation-codesystem-lookup.xml
  Type = tool

 -- Row 5 -----------------------------------
  Name = cmtranslate
  Identity = ConceptMap-translate
  Description = ConceptMap Translate
  Filename = operation-conceptmap-translate.xml
  Type = tool

 -- Row 6 -----------------------------------
  Name = cmclosure
  Identity = ConceptMap-closure
  Description = ConceptMap Closure
  Filename = operation-conceptmap-closure.xml
  Type = tool

 -- Row 7 -----------------------------------
  Name = qpopulate
  Identity = Questionnaire-populate
  Description = Questionnaire Populate
  Filename = operation-questionnaire-populate.xml
  Type = tool

 -- Row 8 -----------------------------------
  Name = lib-data-req
  Identity = Library-data-requirements
  Description = Library data requirements
  Filename = operation-library-data-requirements.xml
  Type = tool

 -- Row 9 -----------------------------------
  Name = meas-date-req
  Identity = Measure-data-requirements
  Description = Measure data requirements
  Filename = operation-measure-data-requirements.xml
  Type = tool

 -- Row 10 -----------------------------------
  Name = meas-eval
  Identity = Measure-evaluate-measure
  Description = Measure evaluate measure
  Filename = operation-measure-evaluate-measure.xml
  Type = tool

=== Sheet Examples =====================================
