
=== Sheet Bindings =====================================

 -- Row 1 -----------------------------------
  Binding Name = ConstraintSeverity
  Binding = code list
  Reference = #constraint-severity
  Definition = SHALL applications comply with this constraint?
  Conformance = required

 -- Row 2 -----------------------------------
  Binding Name = SlicingRules
  Binding = code list
  Reference = #resource-slicing-rules
  Definition = How slices are interpreted when evaluating an instance.
  Conformance = required

 -- Row 3 -----------------------------------
  Binding Name = AggregationMode
  Binding = code list
  Reference = #resource-aggregation-mode
  Definition = How resource references can be aggregated.
  Conformance = required

 -- Row 4 -----------------------------------
  Binding Name = PropertyRepresentation
  Binding = code list
  Reference = #property-representation
  Definition = How a property is represented when serialized.
  Conformance = required

 -- Row 5 -----------------------------------
  Binding Name = ElementDefinitionCode
  Binding = value set
  Reference = http://hl7.org/fhir/ValueSet/observation-codes
  Definition = Codes that indicate the meaning of a data element.
  Conformance = example

 -- Row 6 -----------------------------------
  Binding Name = ReferenceVersionRules
  Binding = code list
  Reference = #reference-version-rules
  Definition = Whether a reference needs to be version specific or version independent, or whether either can be used
  Conformance = required

 -- Row 7 -----------------------------------
  Binding Name = FHIRDefinedTypeExt
  Binding = value set
  Reference = http://hl7.org/fhir/ValueSet/defined-types
  Definition = Either a resource or a data type, including logical model types
  Conformance = extensible
  Copyright = FHIR

 -- Row 8 -----------------------------------
  Binding Name = DiscriminatorType
  Binding = code list
  Reference = #discriminator-type
  Definition = How an element value is interpreted when discrimination is evaluated
  Conformance = required

=== Sheet constraint-severity =====================================

 -- Row 1 -----------------------------------
  Id = 1
  Code = error
  Display = Error
  Definition = If the constraint is violated, the resource is not conformant.

 -- Row 2 -----------------------------------
  Id = 2
  Code = warning
  Display = Warning
  Definition = If the constraint is violated, the resource is conformant, but it is not necessarily following best practice.

=== Sheet resource-slicing-rules =====================================

 -- Row 1 -----------------------------------
  Id = 1
  Code = closed
  Display = Closed
  Definition = No additional content is allowed other than that described by the slices in this profile.

 -- Row 2 -----------------------------------
  Id = 2
  Code = open
  Display = Open
  Definition = Additional content is allowed anywhere in the list.

 -- Row 3 -----------------------------------
  Id = 3
  Code = openAtEnd
  Display = Open at End
  Definition = Additional content is allowed, but only at the end of the list. Note that using this requires that the slices be ordered, which makes it hard to share uses. This should only be done where absolutely required.

=== Sheet resource-aggregation-mode =====================================

 -- Row 1 -----------------------------------
  Id = 1
  Code = contained
  Display = Contained
  Definition = The reference is a local reference to a contained resource.

 -- Row 2 -----------------------------------
  Id = 2
  Code = referenced
  Display = Referenced
  Definition = The reference to a resource that has to be resolved externally to the resource that includes the reference.

 -- Row 3 -----------------------------------
  Id = 3
  Code = bundled
  Display = Bundled
  Definition = The resource the reference points to will be found in the same bundle as the resource that includes the reference.
  Parent = #2

=== Sheet property-representation =====================================

 -- Row 1 -----------------------------------
  Id = 1
  Code = xmlAttr
  Display = XML Attribute
  Definition = In XML, this property is represented as an attribute not an element.

 -- Row 2 -----------------------------------
  Id = 2
  Code = xmlText
  Display = XML Text
  Definition = This element is represented using the XML text attribute (primitives only)

 -- Row 3 -----------------------------------
  Id = 3
  Code = typeAttr
  Display = Type Attribute
  Definition = The type of this element is indicated using xsi:type

 -- Row 4 -----------------------------------
  Id = 4
  Code = cdaText
  Display = CDA Text Format
  Definition = Use CDA narrative instead of XHTML

 -- Row 5 -----------------------------------
  Id = 5
  Code = xhtml
  Display = XHTML
  Definition = The property is represented using XHTML

=== Sheet reference-version-rules =====================================

 -- Row 1 -----------------------------------
  Id = 1
  Code = either
  Display = Either Specific or independent
  Definition = The reference may be either version independent or version specific

 -- Row 2 -----------------------------------
  Id = 2
  Code = independent
  Display = Version independent
  Definition = The reference must be version independent

 -- Row 3 -----------------------------------
  Id = 3
  Code = specific
  Display = Version Specific
  Definition = The reference must be version specific

=== Sheet discriminator-type =====================================

 -- Row 1 -----------------------------------
  Id = 1
  Code = value
  Display = Value
  Definition = The slices have different values in the nominated element

 -- Row 2 -----------------------------------
  Id = 2
  Code = exists
  Display = Exists
  Definition = The slices are differentiated by the presence or absence of the nominated element

 -- Row 3 -----------------------------------
  Id = 3
  Code = pattern
  Display = Pattern
  Definition = The slices have different values in the nominated element, as determined by testing them against the applicable ElementDefinition.pattern[x]

 -- Row 4 -----------------------------------
  Id = 4
  Code = type
  Display = Type
  Definition = The slices are differentiated by type of the nominated element to a specifed profile

 -- Row 5 -----------------------------------
  Id = 5
  Code = profile
  Display = Profile
  Definition = The slices are differentiated by conformance of the nominated element to a specifed profile

=== Sheet Invariants =====================================

 -- Row 1 -----------------------------------
  Id = 1
  Context = ElementDefinition.slicing
  English = If there are no discriminators, there must be a definition
  XPath = (f:discriminator) or (f:description)
  Expression = discriminator.exists() or description.exists()

 -- Row 2 -----------------------------------
  Id = 2
  Context = ElementDefinition
  English = Min <= Max
  XPath = not(exists(f:min)) or not(exists(f:max)) or (not(f:max/@value) and not(f:min/@value)) or (f:max/@value = \'*\') or (number(f:max/@value) >= f:min/@value)
  Expression = min.empty() or max.empty() or (max = \'*\') or (min <= max.toInteger())

 -- Row 3 -----------------------------------
  Id = 3
  Context = ElementDefinition.max
  English = Max SHALL be a number or \"*\"
  XPath = @value=\'*\' or (normalize-space(@value)!=\'\' and normalize-space(translate(@value, \'0123456789\',\'\'))=\'\')
  Expression = empty() or ($this = \'*\') or (toInteger() >= 0)

 -- Row 4 -----------------------------------
  Id = 4
  Context = ElementDefinition.type
  English = Aggregation may only be specified if one of the allowed types for the element is a resource
  XPath = not(exists(f:aggregation)) or exists(f:code[@value = \'Reference\'])
  Expression = aggregation.empty() or (code = \'Reference\')

 -- Row 5 -----------------------------------
  Id = 5
  Context = ElementDefinition
  English = if the element definition has a contentReference, it cannot have type, defaultValue, fixed, pattern, example, minValue, maxValue, maxLength, or binding
  XPath = not(exists(f:contentReference) and (exists(f:type) or exists(f:*[starts-with(local-name(.), \'value\')]) or exists(f:*[starts-with(local-name(.), \'defaultValue\')])  or exists(f:*[starts-with(local-name(.), \'fixed\')]) or exists(f:*[starts-with(local-name(.), \'pattern\')]) or exists(f:*[starts-with(local-name(.), \'example\')]) or exists(f:*[starts-with(local-name(.), \'f:minValue\')]) or exists(f:*[starts-with(local-name(.), \'f:maxValue\')]) or exists(f:maxLength) or exists(f:binding)))
  Expression = contentReference.empty() or (type.empty() and defaultValue.empty() and fixed.empty() and pattern.empty() and example.empty() and minValue.empty() and maxValue.empty() and maxLength.empty() and binding.empty())

 -- Row 6 -----------------------------------
  Id = 6
  Context = ElementDefinition
  English = Fixed value may only be specified if there is one type
  XPath = not(exists(f:*[starts-with(local-name(.), \'fixed\')])) or (count(f:type)<=1)
  Expression = fixed.empty() or (type.count()  <= 1)

 -- Row 7 -----------------------------------
  Id = 7
  Context = ElementDefinition
  English = Pattern may only be specified if there is one type
  XPath = not(exists(f:*[starts-with(local-name(.), \'pattern\')])) or (count(f:type)<=1)
  Expression = pattern.empty() or (type.count() <= 1)

 -- Row 8 -----------------------------------
  Id = 8
  Context = ElementDefinition
  English = Pattern and value are mutually exclusive
  XPath = not(exists(f:*[starts-with(local-name(.), \'pattern\')])) or not(exists(f:*[starts-with(local-name(.), \'fixed\')]))
  Expression = pattern.empty() or fixed.empty()

 -- Row 9 -----------------------------------
  Id = 10
  Context = ElementDefinition.binding
  English = provide either a reference or a description (or both)
  XPath = (exists(f:valueSetUri) or exists(f:valueSetReference)) or exists(f:description)
  Expression = valueSet.exists() or description.exists()

 -- Row 10 -----------------------------------
  Id = 11
  Context = ElementDefinition
  English = Binding can only be present for coded elements, string, and uri
  XPath = not(exists(f:binding)) or (count(f:type/f:code) = 0) or  f:type/f:code/@value=(\'code\',\'Coding\',\'CodeableConcept\',\'Quantity\',\'Extension\', \'string\', \'uri\')
  Expression = binding.empty() or type.code.empty() or type.select((code = \'code\') or (code = \'Coding\') or (code=\'CodeableConcept\') or (code = \'Quantity\') or (code = \'Extension\') or (code = \'string\') or (code = \'uri\')).exists()

 -- Row 11 -----------------------------------
  Id = 12
  Context = ElementDefinition.binding
  English = ValueSet as a URI SHALL start with http:// or https:// or urn:
  XPath = not(exists(f:valueSetUri)) or (starts-with(string(f:valueSetUri/@value), \'http:\') or starts-with(string(f:valueSetUri/@value), \'https:\') or starts-with(string(f:valueSetUri/@value), \'urn:\'))
  Expression = valueSet.is(uri).not() or valueSet.as(uri).startsWith(\'http:\') or valueSet.as(uri).startsWith(\'https\') or valueSet.as(uri).startsWith(\'urn:\')

 -- Row 12 -----------------------------------
  Id = 13
  Context = ElementDefinition
  English = Types must be unique by the combination of code and profile
  XPath = not(exists(for $type in f:type return $type/preceding-sibling::f:type[f:code/@value=$type/f:code/@value and f:profile/@value = $type/f:profile/@value]))
  Expression = type.select(code&profile&targetProfile).isDistinct()

 -- Row 13 -----------------------------------
  Id = 14
  Context = ElementDefinition
  English = Constraints must be unique by key
  XPath = count(f:constraint) = count(distinct-values(f:constraint/f:key/@value))
  Expression = constraint.select(key).isDistinct()

 -- Row 14 -----------------------------------
  Id = 15
  Context = ElementDefinition
  English = default value and meaningWhenMissing are mutually exclusive
  XPath = not(exists(f:*[starts-with(local-name(.), \'fixed\')])) or not(exists(f:meaningWhenMissing))
  Expression = defaultValue.empty() or meaningWhenMissing.empty()

 -- Row 15 -----------------------------------
  Id = 16
  Context = ElementDefinition
  English = sliceName must be composed of proper tokens separated by \"/\"
  XPath = not(exists(f:sliceName/@value)) or matches(f:sliceName/@value, \'^[a-zA-Z0-9\\\\/\\\\-\\\\_]+$\')
  Expression = sliceName.empty() or sliceName.matches(\'^[a-zA-Z0-9\\\\/\\\\-\\\\_]+$\')

=== Sheet Data Elements =====================================

 -- Row 1 -----------------------------------
  Element = ElementDefinition
  Card. = 0..*
  UML = 220;250
  Type = Type
  Short Name = Definition of an element in a resource or extension
  Definition = Captures constraints on each element within the resource, profile, or extension
  IHE DEX mapping = RetrieveMetadata response
  v2 Mapping = OM1
  RIM Mapping = Observation[classCode=OBS, moodCode=DEFN]
  11179 Mapping = Data_Element

 -- Row 2 -----------------------------------
  Element = ElementDefinition.path
  Card. = 1..1
  Type = string
  Short Name = Path of the element in the hierarchy of elements
  Definition = The path identifies the element and is expressed as a \".\"-separated list of ancestor elements, beginning with the name of the resource or extension
  v2 Mapping = N/A
  RIM Mapping = N/A
  11179 Mapping = Name, Identifier & Context

 -- Row 3 -----------------------------------
  Element = ElementDefinition.representation
  Card. = 0..*
  Type = code
  Binding = PropertyRepresentation
  Short Name = xmlAttr | xmlText | typeAttr | cdaText | xhtml
  Definition = Codes that define how this element is represented in instances, when the deviation varies from the normal case
  Comments = In resources, this is rarely used except for special cases where the representation deviates from the normal, and can only be done in the base standard (and profiles must reproduce what the base standard does). This element is used quite commonly in Logical models when the logical models represent a specific serialization format (e.g. CDA, v2 etc)
  v2 Mapping = N/A
  RIM Mapping = N/A
  11179 Mapping = n/a

 -- Row 4 -----------------------------------
  Element = ElementDefinition.sliceName
  Card. = 0..1
  Type = string
  Short Name = Name for this particular element (in a set of slices)
  Definition = The name of this element definition slice, when slicing is working. The name must be a token with no dots or spaces. This is a unique name referring to a specific set of constraints applied to this element, used to provide a name to different slices of the same element
  Requirements = May also be used for code generation purposes
  Comments = The name SHALL be unique within the structure within the context of the constrained resource element.  (Though to avoid confusion, uniqueness across all elements is recommended.)
  v2 Mapping = N/A
  RIM Mapping = N/A
  11179 Mapping = n/a

 -- Row 5 -----------------------------------
  Element = ElementDefinition.label
  Card. = 0..1
  Type = string
  Short Name = Name for element to display with or prompt for element
  Definition = A single preferred label which is the text to display beside the element indicating its meaning or to use to prompt for the element in a user display or form.
  Comments = See also the extension (http://hl7.org/fhir/StructureDefinition/elementdefinition-question)[extension-elementdefinition-question.html]
  RIM Mapping = ./code/display
  11179 Mapping = n/a

 -- Row 6 -----------------------------------
  Element = ElementDefinition.code
  Card. = 0..*
  Type = Coding
  Binding = ElementDefinitionCode
  Short Name = Corresponding codes in terminologies
  Definition = A code that has the same meaning as the element in a particular terminology.
  Requirements = Links the meaning of an element to an external terminology, and is very useful for searching and indexing
  Comments = The concept SHALL be properly aligned with the data element definition and other constraints, as defined in the code system, including relationships, of any code listed here.  Where multiple codes exist in a terminology that could correspond to the data element, the most granular code(s) should be selected, so long as they are not more restrictive than the data element itself. The mappings may be used to provide more or less granular or structured equivalences in the code system
  v2 Mapping = OM1.7
  RIM Mapping = ./code (root or translation)
  11179 Mapping = (Data_Element).data_element_concept.identifier
  LOINC Code = LOINC_NUM

 -- Row 7 -----------------------------------
  Element = ElementDefinition.slicing
  Card. = 0..1
  UML = 0;230
  Short Name = This element is sliced - slices follow
  Definition = Indicates that the element is sliced into a set of alternative definitions (i.e. in a structure definition, there are multiple different constraints on a single element in the base resource). Slicing can be used in any resource that has cardinality ..* on the base resource, or any resource with a choice of types. The set of slices is any elements that come after this in the element sequence that have the same path, until a shorter path occurs (the shorter path terminates the set)
  Comments = The first element in the sequence, the one that carries the slicing, is the definition that applies to all the slices. This is based on the unconstrained element, but can apply any constraints as appropriate. This may include the common constraints on the children of the element
  RIM Mapping = N/A
  11179 Mapping = n/a

 -- Row 8 -----------------------------------
  Element = ElementDefinition.slicing.discriminator
  Card. = 0..*
  Short Name = Element values that are used to distinguish the slices
  Definition = Designates which child elements are used to discriminate between the slices when processing an instance. If one or more discriminators are provided, the value of the child elements in the instance data SHALL completely distinguish which slice the element in the resource matches based on the allowed values for those elements in each of the slices
  Comments = If there is no discriminator, the content is hard to process, so this should be avoided. If the base element has a cardinality of ..1, and there is a choice of types, the discriminator must be \"@type\"
  RIM Mapping = N/A
  11179 Mapping = n/a

 -- Row 9 -----------------------------------
  Element = ElementDefinition.slicing.discriminator.type
  Card. = 1..1
  Type = code
  Binding = DiscriminatorType
  Short Name = value | exists | pattern | type | profile
  Definition = How the element value is interpreted when discrimination is evaluated
  RIM Mapping = N/A

 -- Row 10 -----------------------------------
  Element = ElementDefinition.slicing.discriminator.path
  Card. = 1..1
  Type = string
  Short Name = Path to element value
  Definition = A FHIRPath expression, using a restricted subset of FHIRPath, that is used to identify the element on which discrimination is based
  Comments = The only FHIRPath functions that are allowed are resolve(), and extension(url)
  RIM Mapping = N/A
  11179 Mapping = n/a

 -- Row 11 -----------------------------------
  Element = ElementDefinition.slicing.description
  Card. = 0..1
  Inv. = 1
  Type = string
  Short Name = Text description of how slicing works (or not)
  Definition = A human-readable text description of how the slicing works. If there is no discriminator, this is required to be present to provide whatever information is possible about how the slices can be differentiated
  Comments = If it\'s really not possible to differentiate them, the design should be re-evaluated to make the content usable.
  RIM Mapping = N/A

 -- Row 12 -----------------------------------
  Element = ElementDefinition.slicing.ordered
  Card. = 0..1
  Type = boolean
  Short Name = If elements must be in same order as slices
  Definition = If the matching elements have to occur in the same order as defined in the profile
  Comments = Order should only be required when it is a pressing concern for presentation. Profile authors should consider making the order a feature of the rules about the narrative, not the rules about the data - requiring ordered data makes the profile much less re-usable
  RIM Mapping = N/A
  11179 Mapping = n/a
  Default Value = False

 -- Row 13 -----------------------------------
  Element = ElementDefinition.slicing.rules
  Card. = 1..1
  Type = code
  Binding = SlicingRules
  Short Name = closed | open | openAtEnd
  Definition = Whether additional slices are allowed or not. When the slices are ordered, profile authors can also say that additional slices are only allowed at the end
  Comments = Allowing additional elements makes for a much for flexible template - it\'s open for use in wider contexts, but also means that the content of the resource is not closed, and applications have to decide how to handle content not described by the profile
  RIM Mapping = N/A
  11179 Mapping = n/a

 -- Row 14 -----------------------------------
  Element = ElementDefinition.short
  Card. = 0..1
  Type = string
  Short Name = Concise definition for space-constrained presentation
  Definition = A concise description of what this element means (e.g. for use in autogenerated summaries)
  Comments = May change the term to provide language more appropriate to the context of the profile or to reflect slicing
  RIM Mapping = N/A
  11179 Mapping = N/A

 -- Row 15 -----------------------------------
  Element = ElementDefinition.definition
  Card. = 0..1
  Aliases = Description
  Type = markdown
  Short Name = Full formal definition as narrative text
  Definition = Provides a complete explanation of the meaning of the data element for human readability.  For the case of elements derived from existing elements (e.g. constraints), the definition SHALL be consistent with the base definition, but convey the meaning of the element in the particular context of use of the resource
  Requirements = To allow a user to state the usage of an element in a particular context
  Comments = It is easy for a different definition to change the meaning of an element and this can have nasty downstream consequences. Please be careful when providing definitions
  v2 Mapping = OM1.6, OM1.41
  RIM Mapping = ./text
  11179 Mapping = (Designatable_Item).definition.text  acceptability=preferred in default context
  LOINC Code = TERM DEFINITION/DESCRIPTION(S)

 -- Row 16 -----------------------------------
  Element = ElementDefinition.comment
  Card. = 0..1
  Type = markdown
  Short Name = Comments about the use of this element
  Definition = Explanatory notes and implementation guidance about the data element, including notes about how to use the data properly, exceptions to proper use, etc.
  Comments = If it is possible to capture usage rules using constraints, that mechanism should be used in preference to this element
  v2 Mapping = NTE, OM1.32, OM1.33, OM1.39
  RIM Mapping = ./inboundRelationship[typeCode=SUBJ]/source[classCode=LIST, moodCode=EVN]/code
  11179 Mapping = (Administered_Item).explanatory_comment
  LOINC Code = COMMENTS

 -- Row 17 -----------------------------------
  Element = ElementDefinition.requirements
  Card. = 0..1
  Type = markdown
  Short Name = Why this resource has been created
  Definition = This element is for traceability of why the element was created and why the constraints exist as they do. This may be used to point to source materials or specifications that drove the structure of this element.
  Comments = This element does not describe the usage of the element (that\'s done in comments), rather it\'s for traceability of *why* the element is either needed or why the constraints exist as they do.  This may be used to point to source materials or specifications that drove the structure of this data element
  RIM Mapping = ./inboundRelationship[typeCode=META]/source[classCode=ACT, moodCode=EVN, isCriterionInd=true]/reasonCode/originalText
  11179 Mapping = (Registered_item).document_reference[document_type=requirements].notation
  LOINC Code = R/O/C

 -- Row 18 -----------------------------------
  Element = ElementDefinition.alias
  Card. = 0..*
  Aliases = synonym, other name
  Type = string
  Short Name = Other names
  Definition = Identifies additional names by which this element might also be known
  Requirements = Allows for better easier recognition of the element by multiple communities, including international communities
  v2 Mapping = OM1.8, OM1.52
  RIM Mapping = Not currently expressible
  11179 Mapping = (Designatable_Item).designation.sign  acceptability!=preferred or context is other than default
  LOINC Code = RELATED NAMES (only some of these apply)

 -- Row 19 -----------------------------------
  Element = ElementDefinition.min
  Card. = 0..1
  Inv. = 2
  Type = unsignedInt
  Short Name = Minimum Cardinality
  Definition = The minimum number of times this element SHALL appear in the instance
  RIM Mapping = N/A (MIF territory)
  11179 Mapping = Minimum  size of  data element  values?

 -- Row 20 -----------------------------------
  Element = ElementDefinition.max
  Card. = 0..1
  Inv. = 3,2
  Type = string
  Short Name = Maximum Cardinality (a number or *)
  Definition = The maximum number of times this element is permitted to appear in the instance
  v2 Mapping = OMC.10
  RIM Mapping = N/A (MIF territory)
  11179 Mapping = Maximum  size of  data element  values?

 -- Row 21 -----------------------------------
  Element = ElementDefinition.base
  Card. = 0..1
  Short Name = Base definition information for tools
  Definition = Information about the base definition of the element, provided to make it unnecessary for tools to trace the deviation of the element through the derived and related profiles. This information is provided when the element definition is not the original definition of an element - i.g. either in a constraint on another type, or for elements from a super type in a snap shot.
  Comments = The base information does not carry any information that could not be determined from the path and related profiles, but making this determination requires both that the related profiles are available, and that the algorithm to determine them be available. So they are deformalised into this location for tooling convenience, and to ensure that the base information is available without dependencies.
  RIM Mapping = N/A (MIF territory)
  11179 Mapping = n/a

 -- Row 22 -----------------------------------
  Element = ElementDefinition.base.path
  Card. = 1..1
  Type = string
  Short Name = Path that identifies the base element
  Definition = The Path that identifies the base element - this matches the ElementDefinition.path for that element. Across FHIR, there is only one base definition of any element - that is, an element definition on a [[[StructureDefinition]]] without a StructureDefinition.base
  RIM Mapping = N/A (MIF territory)
  11179 Mapping = n/a

 -- Row 23 -----------------------------------
  Element = ElementDefinition.base.min
  Card. = 1..1
  Type = unsignedInt
  Short Name = Min cardinality of the base element
  Definition = Minimum cardinality of the base element identified by the path
  Comments = This is provided for consistency with max, and may affect code generation of mandatory elements of the base resource are generated differently (some reference implementations have done this)
  RIM Mapping = N/A (MIF territory)
  11179 Mapping = n/a

 -- Row 24 -----------------------------------
  Element = ElementDefinition.base.max
  Card. = 1..1
  Type = string
  Short Name = Max cardinality of the base element
  Definition = Maximum cardinality of the base element identified by the path
  Comments = This is provided to code generation, since the serialization representation in JSON differs depending on whether the base element has max > 1. Also, some forms of code generation may differ.
  RIM Mapping = N/A (MIF territory)
  11179 Mapping = n/a

 -- Row 25 -----------------------------------
  Element = !ElementDefinition.base.binding
  Card. = 0..*
  Type = @ElementDefinition.binding
  Short Name = Parent bindings for reference
  Definition = List of bindings in parent elements
  Comments = These are provided for the usecase where extensible bindings need information about bindings in the parent to correctly decide whether a concept is already present in the ancestry of bindings
  RIM Mapping = N/A

 -- Row 26 -----------------------------------
  Element = ElementDefinition.contentReference
  Card. = 0..1
  Inv. = 5
  Type = uri
  Short Name = Reference to definition of content for the element
  Definition = Identifies the identity of an element defined elsewhere in the profile whose content rules should be applied to the current element
  RIM Mapping = N/A

 -- Row 27 -----------------------------------
  Element = ElementDefinition.type
  Card. = 0..*
  UML = 0;490
  Inv. = 13
  Type = =TypeRef
  Short Name = Data type and Profile for this element
  Definition = The data type or resource that the value of this element is permitted to be
  Comments = The Type of the element can be left blank in a differential constraint, in which case the type is inherited from the resource. Abstract types are not permitted to appear as a type when multiple types are listed.  (I.e. Abstract types cannot be part of a choice)
  IHE DEX mapping = valueDomain.dataType
  v2 Mapping = OM1.3, OMC.9
  RIM Mapping = N/A (MIF territory)
  11179 Mapping = .domain.data+Q14type
  LOINC Code = HL7_V2_DATATYPE (translation required), HL7_V3_DATATYPE (translation required)

 -- Row 28 -----------------------------------
  Element = ElementDefinition.type.code
  Card. = 1..1
  Type = uri
  Binding = FHIRDefinedTypeExt
  Short Name = Data type or Resource (reference to definition)
  Definition = URL of Data type or Resource that is a(or the) type used for this element. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition e.g. \"string\" is a reference to http://hl7.org/fhir/StructureDefinition/string. Absolute URLs are only allowed in logical models
  Comments = If the element is a reference to another resource, this element contains \"Reference\", and the targetProfile element defines what resources can be referenced. The targetProfile may be a reference to the general definition of a resource (e.g. http://hl7.org/fhir/StructureDefinition/Patient). There would be one pair of type/code for each allowed target resource type
  v2 Mapping = OM1.3
  RIM Mapping = N/A (MIF territory)
  11179 Mapping = .domain.data+Q14type
  LOINC Code = HL7_V2_DATATYPE (translation required), HL7_V3_DATATYPE (translation required)

 -- Row 29 -----------------------------------
  Element = ElementDefinition.type.profile
  Card. = 0..1
  Type = uri
  Short Name = Profile (StructureDefinition) to apply (or IG)
  Definition = Identifies a profile structure or implementation Guide that SHALL hold for the datatype this element refers to. Can be a local reference - to a contained StructureDefinition, or a reference to another StructureDefinition or Implementation Guide by a canonical URL. When an implementation guide is specified, the resource SHALL conform to at least one profile defined in the implementation guide
  RIM Mapping = N/A (MIF territory)
  11179 Mapping = n/a

 -- Row 30 -----------------------------------
  Element = ElementDefinition.type.targetProfile
  Card. = 0..1
  Type = uri
  Short Name = Profile (StructureDefinition) to apply to reference target (or IG)
  Definition = Identifies a profile structure or implementation Guide that SHALL hold for the target of the reference this element refers to. Can be a local reference - to a contained StructureDefinition, or a reference to another StructureDefinition or Implementation Guide by a canonical URL. When an implementation guide is specified, the resource SHALL conform to at least one profile defined in the implementation guide
  RIM Mapping = N/A (MIF territory)
  11179 Mapping = n/a

 -- Row 31 -----------------------------------
  Element = ElementDefinition.type.aggregation
  Card. = 0..*
  Inv. = 4
  Type = code
  Binding = AggregationMode
  Short Name = contained | referenced | bundled - how aggregated
  Definition = If the type is a reference to another resource, how the resource is or can be aggregated - is it a contained resource, or a reference, and if the context is a bundle, is it included in the bundle.
  RIM Mapping = N/A (MIF territory)
  11179 Mapping = n/a

 -- Row 32 -----------------------------------
  Element = ElementDefinition.type.versioning
  Card. = 0..1
  Type = code
  Binding = ReferenceVersionRules
  Short Name = either | independent | specific
  Definition = Whether this reference needs to be version specific or version independent, or whether either can be used
  Comments = The base specification never makes a rule as to which form is allowed, but implementation guides may do this
  RIM Mapping = N/A (MIF territory)
  Default Value = either

 -- Row 33 -----------------------------------
  Element = ElementDefinition.defaultValue[x]
  Card. = 0..1
  Inv. = 15
  Type = *
  Short Name = Specified value if missing from instance
  Definition = The value that should be used if there is no value stated in the instance (e.g. \'if not otherwise specified, the abstract is false\')
  Comments = Default values can only be specified on a resource, data type, or extension definition, and never in a profile that applies to one of these. Specifying a default value means that the property can never been unknown - it must always have a value. Further, the default value can never be changed. For these reasons, default values are (and should be) used extremely sparingly.
  RIM Mapping = N/A (MIF territory)

 -- Row 34 -----------------------------------
  Element = ElementDefinition.meaningWhenMissing
  Card. = 0..1
  Inv. = 15
  Type = markdown
  Short Name = Implicit meaning when this element is missing
  Definition = The Implicit meaning that is to be understood when this element is missing (e.g. \'when this element is missing, the period is ongoing\'
  Comments = Implicit meanings for missing values can only be specified on a resource, data type, or extension definition, and never in a profile that applies to one of these. An implicit meaning for a missing value can never be changed, and specifying one has the consequence that constraining its use in profiles eliminates use cases as possibilities, not merely moving them out of scope
  RIM Mapping = N/A (MIF territory)

 -- Row 35 -----------------------------------
  Element = ElementDefinition.orderMeaning
  Card. = 0..1
  Type = string
  Short Name = What the order of the elements means
  Definition = If present, indicates that the order of the repeating element has meaning and describes what that meaning is.  If absent, it means that the order of the element has no meaning
  Comments = This element can only be asserted on repeating elements and can only be introduced when defining resources or data types.  It can be further refined profiled elements but if absent in the base type, a profile cannot assert meaning
  RIM Mapping = N/A (MIF territory)

 -- Row 36 -----------------------------------
  Element = ElementDefinition.fixed[x]
  Card. = 0..1
  Inv. = 5,6,8
  Type = *
  Short Name = Value must be exactly this
  Definition = Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.
  Comments = This is not recommended for Coding and CodeableConcept since these often have highly contextual properties such as version or display
  RIM Mapping = N/A (MIF territory)
  11179 Mapping = N/A (only relevant when constraining, which 11179 doesn\'t do)

 -- Row 37 -----------------------------------
  Element = ElementDefinition.pattern[x]
  Card. = 0..1
  Inv. = 5,7,8
  Type = *
  Short Name = Value must have at least these property values
  Definition = Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).
  Comments = Mostly used for fixing values of CodeableConcept. At present, pattern[x] is not recommended as a basis for slicing while issues related to this are investigated during the STU period
  RIM Mapping = N/A (MIF territory)

 -- Row 38 -----------------------------------
  Element = ElementDefinition.example
  Card. = 0..*
  Short Name = Example value (as defined for type)
  Definition = A sample value for this element demonstrating the type of information that would typically be found in the element
  Comments = Examples will most commonly be present for data where it\'s not implicitly obvious from either the data type or value set what the values might be.  (I.e. Example values for dates or quantities would generally be unnecessary.)  If the example value is fully populated, the publication tool can generate an instance automatically.
  RIM Mapping = N/A (MIF territory)

 -- Row 39 -----------------------------------
  Element = ElementDefinition.example.label
  Card. = 1..1
  Type = string
  Short Name = Describes the purpose of this example
  Definition = Describes the purpose of this example amoung the set of examples
  RIM Mapping = N/A (MIF territory)

 -- Row 40 -----------------------------------
  Element = ElementDefinition.example.value[x]
  Card. = 1..1
  Type = *
  Short Name = Value of Example (one of allowed types)
  Definition = The actual value for the element, which must be one of the types allowed for this element
  RIM Mapping = N/A (MIF territory)
  11179 Mapping = .example
  LOINC Code = EXMPL_ANSWERS

 -- Row 41 -----------------------------------
  Element = ElementDefinition.minValue[x]
  Card. = 0..1
  Type = date | dateTime | instant | time | decimal | integer | positiveInt | unsignedInt | Quantity
  Short Name = Minimum Allowed Value (for some types)
  Definition = The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity
  Comments = Except for date/date/instant, the type of the minValue[x] SHALL be the same as the specified type of the element. For the date/dateTime/instant values, the type of minValue[x] SHALL be either the same, or a a [Duration](datatypes.html#duration) which specifies a relative time limit to the current time. The duration value is positive, and is subtracted from the current clock to determine the minimum allowable value.   A minimum value for a Quantity is interpreted as an canonical minimum - e.g. you cannot provide 100mg if the minimum value is 10g.
  RIM Mapping = N/A (MIF territory)

 -- Row 42 -----------------------------------
  Element = ElementDefinition.maxValue[x]
  Card. = 0..1
  Type = date | dateTime | instant | time | decimal | integer | positiveInt | unsignedInt | Quantity
  Short Name = Maximum Allowed Value (for some types)
  Definition = The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity
  Comments = Except for date/date/instant, the type of the maxValue[x] SHALL be the same as the specified type of the element. For the date/dateTime/instant values, the type of maxValue[x] SHALL be either the same, or a a [Duration](datatypes.html#duration) which specifies a relative time limit to the current time. The duration value is positive, and is added to the current clock to determine the maximum allowable value.   A maximum value for a Quantity is interpreted as an canonical maximum - e.g. you cannot provide 10g if the maximum value is 50mg.
  RIM Mapping = N/A (MIF territory)

 -- Row 43 -----------------------------------
  Element = ElementDefinition.maxLength
  Card. = 0..1
  Type = integer
  Short Name = Max length for strings
  Definition = Indicates the maximum length in characters that is permitted to be present in conformant instances and which is expected to be supported by conformant consumers that support the element
  Comments = Receivers are not required to reject instances that exceed the maximum length.  The full length could be stored.  In some cases, data might be truncated, though truncation should be undertaken with care and an understanding of the consequences of doing so. If not specified, there is no conformance expectation for length support
  v2 Mapping = OMC.12
  RIM Mapping = N/A (MIF territory)
  11179 Mapping = .domain.maximum_character_quantity

 -- Row 44 -----------------------------------
  Element = ElementDefinition.condition
  Card. = 0..*
  Type = id
  Short Name = Reference to invariant about presence
  Definition = A reference to an invariant that may make additional statements about the cardinality or value in the instance
  RIM Mapping = N/A (MIF territory)

 -- Row 45 -----------------------------------
  Element = ElementDefinition.constraint
  Card. = 0..*
  UML = 0;330
  Short Name = Condition that must evaluate to true
  Definition = Formal constraints such as co-occurrence and other constraints that can be computationally evaluated within the context of the instance
  Comments = Constraints should be declared on the \"context\" element - the lowest element in the hierarchy that is common to all nodes referenced by the constraint
  RIM Mapping = N/A (MIF territory)
  11179 Mapping = ??

 -- Row 46 -----------------------------------
  Element = ElementDefinition.constraint.key
  Card. = 1..1
  Inv. = 14
  Type = id
  Short Name = Target of \'condition\' reference above
  Definition = Allows identification of which elements have their cardinalities impacted by the constraint.  Will not be referenced for constraints that do not affect cardinality
  RIM Mapping = N/A (MIF territory)

 -- Row 47 -----------------------------------
  Element = ElementDefinition.constraint.requirements
  Card. = 0..1
  Type = string
  Short Name = Why this constraint is necessary or appropriate
  Definition = Description of why this constraint is necessary or appropriate
  Comments = To be used if the reason for the constraint may not be intuitive to all implementers
  RIM Mapping = N/A (MIF territory)

 -- Row 48 -----------------------------------
  Element = ElementDefinition.constraint.severity
  Card. = 1..1
  Type = code
  Binding = ConstraintSeverity
  Short Name = error | warning
  Definition = Identifies the impact constraint violation has on the conformance of the instance
  Comments = This allows constraints to be asserted as \"shall\" (error) and \"should\" (warning)
  RIM Mapping = N/A (MIF territory)

 -- Row 49 -----------------------------------
  Element = ElementDefinition.constraint.human
  Card. = 1..1
  Type = string
  Short Name = Human description of constraint
  Definition = Text that can be used to describe the constraint in messages identifying that the constraint has been violated
  Comments = Should be expressed in business terms as much as possible
  RIM Mapping = N/A (MIF territory)

 -- Row 50 -----------------------------------
  Element = ElementDefinition.constraint.expression
  Card. = 1..1
  Type = string
  Short Name = FHIRPath expression of constraint
  Definition = A [FHIRPath](http://hl7.org/fluentpath) expression of constraint that can be executed to see if this constraint is met
  Requirements = Used by validation tooling tests of the validity of the resource
  RIM Mapping = N/A (MIF territory)

 -- Row 51 -----------------------------------
  Element = ElementDefinition.constraint.xpath
  Card. = 0..1
  Type = string
  Short Name = XPath expression of constraint
  Definition = An XPath expression of constraint that can be executed to see if this constraint is met
  Requirements = Used in Schematron tests of the validity of the resource
  Comments = Elements SHALL use \"f\" as the namespace prefix for the FHIR namespace, and \"x\" for the xhtml namespace, and SHALL NOT use any other prefixes. \n\nNote: we are considering deprecating the xpath element. Implementer feedback is welcome
  RIM Mapping = N/A (MIF territory)

 -- Row 52 -----------------------------------
  Element = ElementDefinition.constraint.source
  Card. = 0..1
  Type = uri
  Short Name = Reference to original source of constraint
  Definition = A reference to the original source of the constraint, for traceability purposes
  Comments = This is used when, e.g. rendering, where it is not useful to present inherited constraints when rendering the snapshot
  RIM Mapping = N/A (MIF territory)

 -- Row 53 -----------------------------------
  Element = ElementDefinition.mustSupport
  Card. = 0..1
  Type = boolean
  Short Name = If the element must supported
  Definition = If true, implementations that produce or consume resources SHALL provide \"support\" for the element in some meaningful way.  If false, the element may be ignored and not supported
  Requirements = Allows a profile to set expectations for system capabilities beyond merely respecting cardinality constraints
  Comments = \"Something useful\" is context dependent and impossible to describe in the base FHIR specification. For this reason, tue mustSupport flag is never set to true by the FHIR specification itself - it is only set to true in profiles. \n\nThis is done in [Resource Profiles](profiling.html#mustsupport), where the profile labels an element as mustSupport=true. When a profile does this, it SHALL also make clear exactly what kind of \"support\" is required, as this can mean many things.\n\nNote that an element that has the property IsModifier is not necessarily a \"key\" element (e.g. one of the important elements to make use of the resource), nor is it automatically mustSupport - however both of these things are more likely to be true for IsModifier elements than for other elements.
  RIM Mapping = N/A (MIF territory)
  11179 Mapping = ??
  Default Value = False

 -- Row 54 -----------------------------------
  Element = ElementDefinition.isModifier
  Card. = 0..1
  Type = boolean
  Short Name = If this modifies the meaning of other elements
  Definition = If true, the value of this element affects the interpretation of the element or resource that contains it, and the value of the element cannot be ignored. Typically, this is used for status, negation and qualification codes. The effect of this is that the element cannot be ignored by systems: they SHALL either recognize the element and process it, and/or a pre-determination has been made that it is not relevant to their particular system.
  Requirements = Allows elements to be introduced into a specification that can\'t safely be ignored by applications that don\'t recognize them
  Comments = Only the definition of an element can set IsModifier true - either the specification itself or where an extension is originally defined. Once set, it cannot be changed in derived profiles. An element/extension that has isModifier=true SHOULD also have a minimum cardinality of 1, so that there is no lack of clarity about what to do if it is missing. If it can be missing, the definition SHALL make the meaning of a missing element clear
  RIM Mapping = N/A (MIF territory)
  11179 Mapping = ??
  Default Value = False

 -- Row 55 -----------------------------------
  Element = ElementDefinition.isSummary
  Card. = 0..1
  Type = boolean
  Short Name = Include when _summary = true?
  Definition = Whether the element should be included if a client requests a search with the parameter _summary=true
  Requirements = Allow clients to search through large resources quickly
  Comments = Some resources include a set of simple metadata, and some very large data. This element is used to reduce the quantity of data returned in searches. Note that servers may pre-cache summarized resources for optimal performance, so servers may not support per-profile use of the isSummary flag. When a request is made with _summary=true, serailisers only include elements marked as \'isSummary = true\'. Other than Attachment.data, all data type properties are included in the summary form. Modifier elements or elements with minimum cardinality = 1 must be marked as summary elements
  RIM Mapping = N/A (MIF territory)
  11179 Mapping = ??
  Default Value = False

 -- Row 56 -----------------------------------
  Element = ElementDefinition.binding
  Card. = 0..1
  UML = 480;390
  Inv. = 11
  Type = =ElementDefinitionBinding
  Short Name = ValueSet details if this is coded
  Definition = Binds to a value set if this element is coded (code, Coding, CodeableConcept, Quantity), or the data types (string, uri)
  Comments = For a CodeableConcept, when no codes are allowed - only text, use a binding of strength \"required\" with a description explaining that no coded values are allowed and what sort of information to put in the \"text\" element.
  v2 Mapping = OM3, OMC.11
  RIM Mapping = N/A (MIF territory)
  11179 Mapping = .domain
  LOINC Code = ANSWER LIST, NORMATIVE ANSWER LIST

 -- Row 57 -----------------------------------
  Element = ElementDefinition.binding.strength
  Card. = 1..1
  Aliases = conformance; extensibility
  Type = code
  Binding = BindingStrength
  Short Name = required | extensible | preferred | example
  Definition = Indicates the degree of conformance expectations associated with this binding - that is, the degree to which the provided value set must be adhered to in the instances
  Comments = For further discussion, see [[[Using Terminologies]]]
  v2 Mapping = N/A
  RIM Mapping = N/A (MIF territory)
  LOINC Code = N/A

 -- Row 58 -----------------------------------
  Element = ElementDefinition.binding.description
  Card. = 0..1
  Inv. = 10
  Type = string
  Short Name = Human explanation of the value set
  Definition = Describes the intended use of this particular set of codes
  RIM Mapping = N/A (MIF territory)
  11179 Mapping = .domain.description

 -- Row 59 -----------------------------------
  Element = ElementDefinition.binding.valueSet[x]
  Card. = 0..1
  Inv. = 10,12
  Type = uri | Reference(ValueSet)
  Short Name = Source of value set
  Definition = Points to the value set or external definition (e.g. implicit value set) that identifies the set of codes to be used. If the binding refers to an explicit value set - the normal case - then use a Reference(ValueSet) preferably containing the canonical URL for the value set. If the reference is to an implicit value set - usually, an IETF RFC that defines a grammar, such as mime types - then use a uri
  Comments = For value sets with a referenceResource, the display can contain the value set description.  The reference may be version-specific or not
  IHE DEX mapping = valueDomain.valueSet
  RIM Mapping = N/A (MIF territory)
  11179 Mapping = points to explicit list or expression that evaluates to list of (Enumerated_Value_Domain).member
  LOINC Code = CODE_TABLE

 -- Row 60 -----------------------------------
  Element = ElementDefinition.mapping
  Card. = 0..*
  UML = 480;540
  Short Name = Map element to another set of definitions
  Definition = Identifies a concept from an external specification that roughly corresponds to this element
  Requirements = Provides guidance to implementers familiar with or converting content from other specifications
  Comments = Mappings are not necessarily specific enough for safe translation
  IHE DEX mapping = mappingSpecification
  RIM Mapping = N/A (MIF territory)
  11179 Mapping = Registered_item).document_reference[document_type=mapping]  Also, .meaning linkage to Data_Element_Concept is done as a mapping to a reference model.  (Data_Element_Concepts are all defined in some sort of reference model, be that Object_Class and Property or some other mechanism)

 -- Row 61 -----------------------------------
  Element = ElementDefinition.mapping.identity
  Card. = 1..1
  Type = id
  Short Name = Reference to mapping declaration
  Definition = An internal reference to the definition of a mapping
  RIM Mapping = N/A (MIF territory)

 -- Row 62 -----------------------------------
  Element = ElementDefinition.mapping.language
  Card. = 0..1
  Type = code
  Binding = MimeType
  Short Name = Computable language of mapping
  Definition = Identifies the computable language in which mapping.map is expressed.
  Comments = If omitted, then there can be no expectation of computational interpretation of the mapping
  RIM Mapping = N/A (MIF territory)

 -- Row 63 -----------------------------------
  Element = ElementDefinition.mapping.map
  Card. = 1..1
  Type = string
  Short Name = Details of the mapping
  Definition = Expresses what part of the target specification corresponds to this element
  Comments = For most mappings, the syntax is undefined.  Syntax will be provided for mappings to the RIM.  Multiple mappings may be possible and may include constraints on other resource elements that identify when a particular mapping applies
  RIM Mapping = N/A (MIF territory)
  11179 Mapping = ObjectClass, Property (this is one possible data model that can be mapped to - the uri would identify the data model  mappingSpecification.mappingScript

 -- Row 64 -----------------------------------
  Element = ElementDefinition.mapping.comment
  Card. = 0..1
  Type = string
  Short Name = Comments about the mapping or its use
  Definition = Comments that provide information about the mapping or its use
  RIM Mapping = N/A (MIF territory)
